(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    283253,       6345]
NotebookOptionsPosition[    277298,       6151]
NotebookOutlinePosition[    277651,       6167]
CellTagsIndexPosition[    277608,       6164]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Fat tail - finite moments case", "Title",
 CellChangeTimes->{{3.80736482747299*^9, 3.807364836847068*^9}}],

Cell[CellGroupData[{

Cell["The body the shoulders and the tails", "Chapter",
 CellChangeTimes->{{3.8073648548960114`*^9, 3.8073648797851353`*^9}}],

Cell[TextData[{
 StyleBox["Let X be a PDF with p(x) from a general class of unimodal, one \
parameter continuous pdfs ",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   RowBox[{"\[InvisiblePrefixScriptBase]", 
    SubscriptBox["p", "\[Sigma]"], " "}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 StyleBox[" with support D \[SubsetEqual] R and scale parameter \[Sigma]\nThe \
density p(x) satisfies:\n\np(",
  FontSize->16],
 Cell[BoxData[
  FormBox["x", TraditionalForm]],
  FormatType->"TraditionalForm"],
 StyleBox[") <= p(x+\[Epsilon])  for x>",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]]],
 StyleBox["   and  p(x-\[Epsilon]) <=  p(",
  FontSize->16],
 Cell[BoxData[
  FormBox["x", TraditionalForm]],
  FormatType->"TraditionalForm"],
 StyleBox[")  for x<= ",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]]],
 StyleBox["  with  ",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]]],
 StyleBox[" = argmax p(x).\n\nThe class of quasi concave functions is defined \
as follows. For all x and y in the domain and \[Omega] \[Element] [0,1] \
functions is defined as satisfying:\n\np(\[Omega] x + (1-\[Omega] ) y ) >= \
min(p(x),p(y))\n\nLet us define the two tail distribution ",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["p", "\[Delta]"], "(", "x", ")"}], " ", "=", " "}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", 
    RowBox[{"\[Sigma]", "+", "\[Delta]"}]], TraditionalForm]]],
 StyleBox["(x)+",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["p", 
      RowBox[{"\[Sigma]", "-", "\[Delta]"}]], "(", "x", ")"}], "/", "2"}], 
   TraditionalForm]]],
 " ",
 StyleBox["for a small ",
  FontSize->16],
 "\[Delta]",
 StyleBox[", i.e. introducing some addition stochasticity on the scale \
parameter. \n\nSuch unimodal distributions have three areas\n1.- High peak: x \
\[Element] (",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "2"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->16],
 StyleBox[", ",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "3"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->16],
 StyleBox[")  ",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["p", "\[Delta]"], "(", "x", ")"}], " ", "\[GreaterEqual]",
     " ", 
    RowBox[{"p", "(", "x", ")"}], " "}], TraditionalForm]],
  FontSize->16],
 Cell[BoxData[" "],
  FontSize->16],
 StyleBox["\n2.- Sounders: x \[Element] (",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "1"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->16],
 StyleBox[", ",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "2"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->16],
 StyleBox[") \[Union] (",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "3"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->16],
 StyleBox[", ",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "4"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->16],
 StyleBox[")  ",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     RowBox[{"p", "(", "x", ")"}], "\[GreaterEqual]", " ", 
     RowBox[{
      SuperscriptBox["p", "\[Delta]"], "(", "x", ")"}], " "}]}], 
   TraditionalForm]],
  FontSize->16],
 Cell[BoxData[" "],
  FontSize->16],
 StyleBox["\n3.- Tails: x \[Element] (-\[Infinity], ",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "1"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->16],
 StyleBox[") \[Union] (",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "4"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->16],
 StyleBox[", ",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   StyleBox["\[Infinity]",
    FontSize->16], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->16],
 StyleBox[")  ",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     RowBox[{
      SuperscriptBox["p", "\[Delta]"], "(", "x", ")"}], " ", 
     "\[GreaterEqual]", " ", 
     RowBox[{"p", "(", "x", ")"}], " "}]}], TraditionalForm]],
  FontSize->16],
 Cell[BoxData[" "],
  FontSize->16],
 StyleBox["\n\nthat satisfy the differential equation, i.e inflexion points \
!:  ",
  FontSize->16],
 "\n\n",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{
     SuperscriptBox["\[PartialD]", "2"], " ", 
     RowBox[{"p", "(", "x", ")"}]}], 
    RowBox[{" ", 
     RowBox[{"\[PartialD]", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]}]], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->18],
 StyleBox[" = 0",
  FontSize->18],
 "\n\n"
}], "Text",
 CellChangeTimes->{{3.807364929623774*^9, 3.807365240273988*^9}, {
  3.807365274659326*^9, 3.8073653491803837`*^9}, {3.807365386347178*^9, 
  3.807365464050815*^9}, {3.807365510812572*^9, 3.807365849278864*^9}, {
  3.807365989305352*^9, 3.807366174473566*^9}, {3.807366231807521*^9, 
  3.807366262994532*^9}, {3.8073662937823143`*^9, 3.807366537675563*^9}, {
  3.807366961434421*^9, 3.8073669619062643`*^9}, {3.807443205779977*^9, 
  3.807443214670534*^9}, {3.807443272511758*^9, 3.807443291070241*^9}}],

Cell[CellGroupData[{

Cell["Gaussian case", "Section",
 CellChangeTimes->{{3.80736655040198*^9, 3.807366571833784*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "[", 
   RowBox[{"x_", ",", " ", 
    StyleBox["\[Mu]_", "TR"], ",", 
    StyleBox["\[Sigma]_", "TR"]}], 
   StyleBox[" ", "TR"], "]"}], ":=", 
  RowBox[{"PDF", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{
      StyleBox["\[Mu]", "TR"], ",", 
      StyleBox["\[Sigma]", "TR"]}], "]"}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pdelta1", "[", 
   RowBox[{"x_", ",", 
    StyleBox["\[Mu]_", "TR"], ",", "\[Sigma]_", ",", "delta_"}], "]"}], ":=", 
  
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"x", ",", " ", 
       StyleBox["\[Mu]", "TR"], ",", 
       RowBox[{
        StyleBox["\[Sigma]", "TR"], "+", "delta"}]}], "]"}], "+", 
     RowBox[{"p", "[", 
      RowBox[{"x", ",", " ", 
       StyleBox["\[Mu]", "TR"], ",", 
       RowBox[{
        StyleBox["\[Sigma]", "TR"], "-", "delta"}]}], 
      StyleBox[" ", "TR"], "]"}]}], ")"}], "/", 
   "2"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pdelta2", "[", 
   RowBox[{"x_", ",", 
    StyleBox["\[Mu]_", "TR"], ",", "\[Sigma]_", ",", "delta_"}], "]"}], ":=", 
  
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"x", ",", " ", 
       StyleBox["\[Mu]", "TR"], ",", 
       RowBox[{
        StyleBox["\[Sigma]", "TR"], 
        SqrtBox[
         RowBox[{"1", "+", "delta"}]]}]}], "]"}], "+", 
     RowBox[{"p", "[", 
      RowBox[{"x", ",", " ", 
       StyleBox["\[Mu]", "TR"], ",", 
       RowBox[{
        StyleBox["\[Sigma]", "TR"], 
        SqrtBox[
         RowBox[{"1", "-", "delta"}]]}]}], 
      StyleBox[" ", "TR"], "]"}]}], ")"}], "/", "2"}]}]}], "Input",
 CellChangeTimes->{{3.80744332231286*^9, 3.8074434515996*^9}, {
  3.807443498274263*^9, 3.807443502913526*^9}, {3.8074435626478863`*^9, 
  3.807443572954103*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solutions", "=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"p", "[", 
          RowBox[{"x", ",", " ", 
           StyleBox["\[Mu]", "TR"], ",", 
           StyleBox["\[Sigma]", "TR"]}], 
          StyleBox[" ", "TR"], "]"}], ",", 
         StyleBox["\[Sigma]", "TR"]}], "]"}], ",", 
       StyleBox["\[Sigma]", "TR"]}], "]"}], "\[Equal]", "0"}], ",", " ", 
    "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.807366696726964*^9, 3.807366699185094*^9}, {
  3.807366782515324*^9, 3.807366797330184*^9}, {3.807366836451325*^9, 
  3.807366858842436*^9}, {3.807377431992988*^9, 3.807377433698977*^9}, {
  3.8074435314588547`*^9, 3.807443601703476*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "\[Mu]"}], "-", 
        RowBox[{
         SqrtBox["2"], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"5", " ", 
            SuperscriptBox["\[Sigma]", "2"]}], "-", 
           RowBox[{
            SqrtBox["17"], " ", 
            SuperscriptBox["\[Sigma]", "2"]}]}]]}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "\[Mu]"}], "+", 
        RowBox[{
         SqrtBox["2"], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"5", " ", 
            SuperscriptBox["\[Sigma]", "2"]}], "-", 
           RowBox[{
            SqrtBox["17"], " ", 
            SuperscriptBox["\[Sigma]", "2"]}]}]]}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "\[Mu]"}], "-", 
        RowBox[{
         SqrtBox["2"], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"5", " ", 
            SuperscriptBox["\[Sigma]", "2"]}], "+", 
           RowBox[{
            SqrtBox["17"], " ", 
            SuperscriptBox["\[Sigma]", "2"]}]}]]}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "\[Mu]"}], "+", 
        RowBox[{
         SqrtBox["2"], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"5", " ", 
            SuperscriptBox["\[Sigma]", "2"]}], "+", 
           RowBox[{
            SqrtBox["17"], " ", 
            SuperscriptBox["\[Sigma]", "2"]}]}]]}]}], ")"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.807366700118938*^9, {3.8073668410946207`*^9, 3.807366860132473*^9}, 
   3.807366972271492*^9, 3.807368732371813*^9, 3.8073772934357452`*^9, {
   3.807377430441167*^9, 3.8073774348975058`*^9}, 3.8073839702791567`*^9, 
   3.80738499641044*^9, 3.807443603279819*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"x", ",", " ", 
       StyleBox["\[Mu]", "TR"], ",", 
       StyleBox["\[Sigma]", "TR"]}], 
      StyleBox[" ", "TR"], "]"}], "/", 
     RowBox[{"pdelta1", "[", 
      RowBox[{"x", ",", 
       StyleBox["\[Mu]", "TR"], ",", "\[Sigma]", ",", "delt"}], "]"}]}], 
    ")"}], ",", 
   RowBox[{"delt", "\[Rule]", "0"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"x", ",", " ", 
       StyleBox["\[Mu]", "TR"], ",", 
       StyleBox["\[Sigma]", "TR"]}], 
      StyleBox[" ", "TR"], "]"}], "/", 
     RowBox[{"pdelta2", "[", 
      RowBox[{"x", ",", 
       StyleBox["\[Mu]", "TR"], ",", "\[Sigma]", ",", "delt"}], "]"}]}], 
    ")"}], ",", 
   RowBox[{"delt", "\[Rule]", "0"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.807377218527205*^9, 3.807377366342098*^9}, {
  3.8073774253619127`*^9, 3.8073774995607643`*^9}, {3.8074436326588583`*^9, 
  3.8074436945105047`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.8074436667611856`*^9, 3.8074436948342953`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.8074436667611856`*^9, 3.8074436950550547`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solutions", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", "0"}], ",", 
     RowBox[{"delt", "\[Rule]", "0.9"}]}], "}"}]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.80744383572922*^9, 3.807443841774631*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.6621534468619564`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.6621534468619564`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "2.135779205069857`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "2.135779205069857`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.8074438388198137`*^9, 3.8074438425958757`*^9}}]
}, Open  ]],

Cell["\<\
The following graph compares and shows that, the the variance is standard \
deviation is varied, some parts of 
of the gaussian get fatter, while other thinner. \
\>", "Text",
 CellChangeTimes->{{3.807443855050517*^9, 3.807443949295813*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"toPlot", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{
       RowBox[{"p", "[", 
        RowBox[{"x", ",", " ", 
         StyleBox["\[Mu]", "TR"], ",", 
         StyleBox["\[Sigma]", "TR"]}], 
        StyleBox[" ", "TR"], "]"}], "/", 
       RowBox[{"pdelta1", "[", 
        RowBox[{"x", ",", 
         StyleBox["\[Mu]", "TR"], ",", "\[Sigma]", ",", "delt"}], "]"}]}]}], 
     " ", "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
      RowBox[{"\[Mu]", "\[Rule]", "0"}], ",", 
      RowBox[{"delt", "\[Rule]", "0.1"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"toPlot", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2.5"}], ",", "2.5"}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.662153"}], ",", "0.662153", ",", " ", 
       RowBox[{"-", "2.13577"}], ",", " ", "2.13577"}], "}"}], " ", "}"}]}]}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"toPlot", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p", "[", 
       RowBox[{"x", ",", " ", 
        StyleBox["\[Mu]", "TR"], ",", 
        StyleBox["\[Sigma]", "TR"]}], 
       StyleBox[" ", "TR"], "]"}], ",", 
      RowBox[{"pdelta1", "[", 
       RowBox[{"x", ",", 
        StyleBox["\[Mu]", "TR"], ",", "\[Sigma]", ",", "delt"}], "]"}]}], " ",
      "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
      RowBox[{"\[Mu]", "\[Rule]", "0"}], ",", 
      RowBox[{"delt", "\[Rule]", "0.1"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"toPlot", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2.5"}], ",", "2.5"}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.662153"}], ",", "0.662153", ",", " ", 
       RowBox[{"-", "2.13577"}], ",", " ", "2.13577"}], "}"}], " ", "}"}]}]}],
   "]"}]}], "Input",
 CellChangeTimes->{{3.807444366453933*^9, 3.8074443664566727`*^9}, {
  3.807444418552536*^9, 3.807444437649832*^9}, {3.807444476039562*^9, 
  3.807444492298725*^9}, {3.8074447729168663`*^9, 3.8074448193539333`*^9}, {
  3.807445086155016*^9, 3.807445105131207*^9}, {3.80744514390912*^9, 
  3.80744514544326*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQXfvc99P//8wHGMDgg/2UkgTvhtkI/mrG4iUM5gg+
a6q7kWQsE5wvfONozqKJjHB+0OFZyZqnGOD86ve2ORMe/98P4+8on5W13v8f
nO83KVTh38w/cL773L1+Hm9+wfnLjldeK47+CefHtUwRPb/iO5xfl8C8jlv4
G5zPoCu/37n1C5x/q3tm++qrn+B8Ga6MlV+cPsL52aZarLdl3sP5yeb3Vhw+
/BrO16qw+p+35AWcv/Bu8JFKx6dw/vNGURt3iUdw/q6pGq4vwu7C+QYvb37R
n3sNznfZdZvzb9gFOL9g5fofgsKH4fywNOWFl2pWwvnHz9zsMg5eYQ/jW+ke
3BQw/TCcz1QmeidF8gKcz84T0Jj07hqc3/zgmnPR4rtw/obZbQF1nx7C+fmL
UgSehD2F8+OyZsm2N76A8zsDyyyN57yG81lEpj6r//UOzr9+uvVDC/9HOD+0
Osls1uFPcH4O92ulc1Ff4Hz51cemsb36CudX73AO5p/9Hc4vWJazzUz/J5zP
w2SepPf0F5zvmhsyVWvyHzhfYqdsvqvKPzh/UlHHRIPr/+H8oDZ/3bnbGBzg
8RndErqklhHOv/aMc9HkUCY4/1zSU0cheWY4X22ppFRnP4IPzS9wPgBHkxF5

      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
WSTZ8QY7Hk1ZMCcXcIFF0uL0ehPRWRPL6/TdWISrY8XtFLTl722+7FMsksCy
oaehZ9pslV/ascjNT7JLMtFP3/u0eR5mkdm19xnZ6LjNXoaZB1jk/n9HK3LQ
YY888r7vZZFl0092v0BfFXCXEzdikbOpqdcK0B6eLreMqSyyJS7SpQjt+P3U
1JUtLPJKPXfhS/QhYweHws0s8v7NpsMl6D2FJ5r+rmORlJsWJ0rR+iuPbl+5
Gs+3a590GXrTLZvsAytYpId9PJhjxQkrqVuSLHJZgZbOscQJixtEFI93K9Of
Y4HafaPjC1kk5Iy1AMfTWibHVXlYpHOYspvz+cNJRnXHZ5gkcucvPc7xe4R2
bomeYJIfd3T+FKNbvKhPPw4zSR5Dx4hz/u979MQo/UySHrDiKOf6yky3XNPq
YZL5g6tVONf//KXWP+evTHIhMDibsz5Jipttk5qZZLPI5V7O+kWGq71vrWOS
6hloyUAHM1U1haqZRGCfsB9n/V0+KYl4lTBJ62Ta8CPO87FF3i/7BZPUqP15
FYc2e7K8vzuLSRbdkjKIRmv7SrwzecQk9coaF26jVfqWbAyIYZIB2buKwejl
ZiIJxXeYxONe5c1raO41/F4K15lERe5h4AX0xF2eX9Z++Pm5ecvc0P3T8/vD
LuB6vAk6eQr9qYmpMuXEJEfY+9bZoN/qTcSsP8Ek286VPDXnPM/pIzz2NkzS
PVzdacx5PvwHuupMmOSrUanPFs7z0f97D/cuPJ66aM8m9BXLXy91tjOJoMEo
jzLaQaXzXsomJvmVou8vwbm/rfW7vCWYZOcF3Z3/cP8qUT/mPxdhkvaajRGc
/b0su3rlL34mISv9ozn7f+YaYe1lTxHT9LlOGvr9+hfPlX5MkRa7Lqu76GNB
URINGVOEP4Ahr4T+BJP83ilT5J+g8SEJNEwfZMsnTJFg98eH+DnxxUP2h8ed
KdJvNFc4gPHu5/GUjGVeU6ReLaInB+20LW/bMUN8/fHGzRvQbZNL1Pj1p0ii
8aTIcrRRvqd8nvYUWR4f91IQrayis4BbdYrU/Vp/9g/G54Fl5Z/SRKfIhhOB
bolot9Fau39dk2ToO22EG/39+YYDMe2TZLF6dvIw5oP9Z+78B02T5LGPsfxX
9KZui3X3KieJarb1rTz0aH3HuGb2JDk3nLLsMNor80/IZe9JEnHOXicd89GV
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
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9729068801665456},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{-0.662153, 0.662153, -2.13577, 2.13577}, {-0.662153, 
   0.662153, -2.13577, 2.13577}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.5, 2.5}, {0.9729068801665456, 1.0214182427172025`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.807444419239273*^9, 3.807444438188426*^9}, {
   3.8074444768740807`*^9, 3.807444497231442*^9}, {3.807444795089876*^9, 
   3.807444820192162*^9}, 3.8074451062470407`*^9, 3.8074451462242937`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
esVBgf/b38D+f3/jfwCEDnwR
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
VH9Gwv+9b2D//77xP3rbmvg=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{-0.662153, 0.662153, -2.13577, 2.13577}, {-0.662153, 
   0.662153, -2.13577, 2.13577}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{596.1796875, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.5, 2.5}, {0., 0.40297196904836974`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.807444419239273*^9, 3.807444438188426*^9}, {
   3.8074444768740807`*^9, 3.807444497231442*^9}, {3.807444795089876*^9, 
   3.807444820192162*^9}, 3.8074451062470407`*^9, 3.807445146303331*^9}]
}, Open  ]],

Cell["\<\
This is not exactly the case for the variance preserving case which we ignore \
hereafter\
\>", "Text",
 CellChangeTimes->{{3.807444922225782*^9, 3.807444938859132*^9}, {
  3.807444977321887*^9, 3.80744499156919*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"toPlot", "=", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{
         RowBox[{"p", "[", 
          RowBox[{"x", ",", " ", 
           StyleBox["\[Mu]", "TR"], ",", 
           StyleBox["\[Sigma]", "TR"]}], 
          StyleBox[" ", "TR"], "]"}], "/", 
         RowBox[{"pdelta2", "[", 
          RowBox[{"x", ",", 
           StyleBox["\[Mu]", "TR"], ",", "\[Sigma]", ",", "delt"}], "]"}]}]}],
        " ", "}"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
        RowBox[{"\[Mu]", "\[Rule]", "0"}], ",", 
        RowBox[{"delt", "\[Rule]", "0.000001"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{"toPlot", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2.5"}], ",", "2.5"}], "}"}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.662153"}], ",", "0.662153", ",", " ", 
         RowBox[{"-", "2.13577"}], ",", " ", "2.13577"}], "}"}], " ", 
       "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.807444867512775*^9, 3.8074449123132887`*^9}, {
  3.80744495415532*^9, 3.807444957194577*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQXfvc99P//8wHGMDgg/2UkgTvhtkI/mrG4iUM5gg+
a6q7kWQsE5wvfONozqKJjHB+0OFZyZqnGOD86ve2ORMe/98P4+8on5W13v8f
nO83KVTh38w/cL773L1+Hm9+wfnLjldeK47+CefHtUwRPb/iO5xfl8C8jlv4
G5zPoCu/37n1C5x/q3tm++qrn+B8Ga6MlV+cPsL52aZarLdl3sP5yeb3Vhw+
/BrO16qw+p+35AWcv/Bu8JFKx6dw/vNGURt3iUdw/q6pGq4vwu7C+QYvb37R
n3sNznfZdZvzb9gFOL9g5fofgsKH4fywNOWFl2pWwvnHz9zsMg5eYQ/jW+ke
3BQw/TCcz1QmeidF8gKcz84T0Jj07hqc3/zgmnPR4rtw/obZbQF1nx7C+fmL
UgSehD2F8+OyZsm2N76A8zsDyyyN57yG81lEpj6r//UOzr9+uvVDC/9HOD+0
Osls1uFPcH4O92ulc1Ff4Hz51cemsb36CudX73AO5p/9Hc4vWJazzUz/J5zP
w2SepPf0F5zvmhsyVWvyHzhfYqdsvqvKPzh/UlHHRIPr/+H8oDZ/3bnbGBzg
8RndErqklhHOv/aMc9HkUCY4/1zSU0cheWY4X22ppFRnP4IPzS9wPgBHkxF5

      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJw11A1ME1ccAPDrlYKFGifIQtGOL+OUyGejBKJ7xxgfyaZCscTIcFpg2aAT
g6zoGDoGojjcRGTadkxhzEDqZCEZA9S9Yx0jgKLTWUGs1mkR6Sala2kp0I7l
/bnkcvkl9+7+X++FyIok+TRFUdLF+/9n+fNtFreby5pN7sVrCp0t2fv2Z2ou
22Qh1nAOtlBxXPYHB/EucY5JMEiztS5iXn5qrDCHZg2cxY9RZlT7bfWtHDuH
5XoQ+430yZvrOOwzHnHHtugJYwSHLfcilmhVuRsGKXZsGfEJ/cMbjhyKXe1N
XDa1VX76qRu/5kOsEstNF4RurAd3laoK2ne4cJGAmMs71KcrWcB68PYz0mCX
ch6LlhMPnquJC9PO4VhwauP17Wl/O3EoWNGh9n0U5sRWWH+p/7DuYPYs1oDp
dV6KkM8dOBG8p+qs/61WO74O8ey3DO37Rz+DI8FH9nKv+PjN4FOQD06p63z9
HRs28ImpiCCcdMyKN4AffKE8rrlnwaVQnzXeH7RZ35zGA1C/wk3hvLE1U3iS
S5wb96hVqzXhAJo4/FCCe3/LBC6hiJv0mb8dTjTi8wukX88r/LekBvyFh5zE
svGd7fp9BiyfJe5pWJ88kaXH66HfHyOOSOAcxXw7cfSLUWtUow4vm4H3/9h9
9NVP7uJ4G/FbPWP8hazbuNJKPP+l2LPaMICf/Et8oK3dsdJPi3PBnpWOiynF
3dgXnPV+WNOdT9vwY5g/83ll3rRSgm+C+2+MnhRntiI9WH6xtEF0uRutgvUJ
Eb0d6ee0qBB8QaDYtNw4gJb+Tyv8H+YJb6MSiM+jt+PK08q7KAHi9xKkV8he
6lAw5JesqJdNpj1AoZB/pUGXVPydHiVBfWZ58d2rZQa0VL8f1dXpRyxPkAbq
W9Sc98qzLCO6DPXfU6ASHa+YQLnQn5oMRbz4GxOioX8eqxrGjzpfohHo7/2h
Y+aqFdPoNPRfWibbrNJaUB7Mh9zHFDq824oomJ+UsZF3C0Jt6Bo4SPP7156T
NlQI83czhmc7+esMEsJ8lnUlZa5Q29FPYEXUiEdYvgPFwHwfuCTv3Bw1i5Tg
N/7MqI31diITWEDHySKNThQC+6f1576yjdfmUAw4+aOdDeH182hp/0X6xdNd
2QtoHNYHdIuKkte6UA34nn8mdXXBhawQz5niE3XR991oI3j4Mf9qYAbFbIV8
JNU7Iho7KSYQ8v3F/GFvcCCH6Yf6hGdXSVvKOcwWT9hvIf1z6hccJg3OJ904
v7leSjPeUP87LfZpSQ/N7HKTfg3LjIm+QVyGB/1c970wsOYrLvMezBOcn8zS
+fkfZD2NfA==
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9999999999994298},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{-0.662153, 0.662153, -2.13577, 2.13577}, {-0.662153, 
   0.662153, -2.13577, 2.13577}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.5, 2.5}, {0.9999999999994298, 1.00000000000075}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.807444941461047*^9, 3.8074449581123457`*^9}}]
}, Open  ]],

Cell["\<\
However as delta grows, the points at which the two PDF interset, the \
original one and the delta perturbed one, change:\
\>", "Text",
 CellChangeTimes->{{3.807444837457344*^9, 3.807444855009446*^9}, {
  3.807444998914131*^9, 3.807444999914536*^9}, {3.807445168515761*^9, 
  3.80744529677066*^9}, {3.807445761771*^9, 3.807445779995063*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"toPlot", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{
       RowBox[{"p", "[", 
        RowBox[{"x", ",", " ", 
         StyleBox["\[Mu]", "TR"], ",", 
         StyleBox["\[Sigma]", "TR"]}], 
        StyleBox[" ", "TR"], "]"}], "/", 
       RowBox[{"pdelta2", "[", 
        RowBox[{"x", ",", 
         StyleBox["\[Mu]", "TR"], ",", "\[Sigma]", ",", "delt"}], "]"}]}]}], 
     "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
      RowBox[{"\[Mu]", "\[Rule]", "0"}], ",", 
      RowBox[{"delt", "\[Rule]", "0.4"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{"toPlot", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "2.5"}], ",", "2.5"}], "}"}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.662153"}], ",", "0.662153", ",", " ", 
        RowBox[{"-", "2.13577"}], ",", " ", "2.13577"}], "}"}], " ", 
      "}"}]}]}], "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"toPlot", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p", "[", 
       RowBox[{"x", ",", " ", 
        StyleBox["\[Mu]", "TR"], ",", 
        StyleBox["\[Sigma]", "TR"]}], 
       StyleBox[" ", "TR"], "]"}], ",", 
      RowBox[{"pdelta2", "[", 
       RowBox[{"x", ",", 
        StyleBox["\[Mu]", "TR"], ",", "\[Sigma]", ",", "delt"}], "]"}]}], " ",
      "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
      RowBox[{"\[Mu]", "\[Rule]", "0"}], ",", 
      RowBox[{"delt", "\[Rule]", "0.4"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"toPlot", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2.5"}], ",", "2.5"}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.662153"}], ",", "0.662153", ",", " ", 
       RowBox[{"-", "2.13577"}], ",", " ", "2.13577"}], "}"}], " ", "}"}]}]}],
   "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQvXKxyo7/sW8cj7Bc2QOiw85kHgTRuxNTzoJo6RN7
HoLoTat2vQbRy7bM/AyiFYV5voDoK5Ll/0F0x7XTjAxxbxz7Tu8zB9FT9D64
geht5ee8QfQdBo1YEL3LsN+cCUj/CZsGps8E1NqA6Fq2y2CaoVTFC0QzpeuC
ab/OmiAQLbBRMgRE8zQHJIJoEe6NqWD1rWoLQbQLixWYThLetRREp1knLgPR
VxLO7QfR5xyvgunNy3mT5IG0VU5ALog2uNJQDqKfhjSD6ZJNkXNBdBhf2BKw
/HabwyC6dlHycRCdFnD/HIju13zyEETrTpdnUgDSCv9rWEE0ADxenDw=
  "]],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQXfvc99P//8wHGMDgg/2UkgTvhtkI/mrG4iUM5gg+
a6q7kWQsE5wvfONozqKJjHB+0OFZyZqnGOD86ve2ORMe/98P4+8on5W13v8f
nO83KVTh38w/cL773L1+Hm9+wfnLjldeK47+CefHtUwRPb/iO5xfl8C8jlv4
G5zPoCu/37n1C5x/q3tm++qrn+B8Ga6MlV+cPsL52aZarLdl3sP5yeb3Vhw+
/BrO16qw+p+35AWcv/Bu8JFKx6dw/vNGURt3iUdw/q6pGq4vwu7C+QYvb37R
n3sNznfZdZvzb9gFOL9g5fofgsKH4fywNOWFl2pWwvnHz9zsMg5eYQ/jW+ke
3BQw/TCcz1QmeidF8gKcz84T0Jj07hqc3/zgmnPR4rtw/obZbQF1nx7C+fmL
UgSehD2F8+OyZsm2N76A8zsDyyyN57yG81lEpj6r//UOzr9+uvVDC/9HOD+0
Osls1uFPcH4O92ulc1Ff4Hz51cemsb36CudX73AO5p/9Hc4vWJazzUz/J5zP
w2SepPf0F5zvmhsyVWvyHzhfYqdsvqvKPzh/UlHHRIPr/+H8oDZ/3bnbGBzg
8RndErqklhHOv/aMc9HkUCY4/1zSU0cheWY4X22ppFRnP4IPzS9wPgBHkxF5

      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
r/px+L/fE1H+//dE/wMKCQL1
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.8989991798468077},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{-0.662153, 0.662153, -2.13577, 2.13577}, {-0.662153, 
   0.662153, -2.13577, 2.13577}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.5, 2.5}, {0.8989991798468077, 1.1313643763052637`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.807379237998331*^9, {3.807379277927184*^9, 3.8073793017236757`*^9}, {
   3.807379352654604*^9, 3.807379360841473*^9}, {3.807379459106153*^9, 
   3.807379471572702*^9}, {3.807379975170548*^9, 3.8073800244932947`*^9}, {
   3.8073801302746553`*^9, 3.8073801384158783`*^9}, {3.807380172926056*^9, 
   3.80738020275187*^9}, {3.807383989853836*^9, 3.8073840396014633`*^9}, 
   3.807384149635829*^9, 3.807384225742405*^9, {3.807384334914349*^9, 
   3.8073843666590014`*^9}, {3.807384835453597*^9, 3.807384842940456*^9}, {
   3.807384879000372*^9, 3.807384884051423*^9}, 3.807385088094866*^9, 
   3.8074437548483667`*^9, {3.807443786953533*^9, 3.807443819640033*^9}, 
   3.80744390047475*^9, {3.807444205841631*^9, 3.807444259224362*^9}, 
   3.807444507346602*^9, 3.807444540708177*^9, {3.807444619930278*^9, 
   3.8074447516502113`*^9}, {3.807445025830392*^9, 3.807445036275897*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
esVBgf/b38D+f3/jfwCEDnwR
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{-0.662153, 0.662153, -2.13577, 2.13577}, {-0.662153, 
   0.662153, -2.13577, 2.13577}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.5, 2.5}, {0., 0.42609997682251505`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.807379237998331*^9, {3.807379277927184*^9, 3.8073793017236757`*^9}, {
   3.807379352654604*^9, 3.807379360841473*^9}, {3.807379459106153*^9, 
   3.807379471572702*^9}, {3.807379975170548*^9, 3.8073800244932947`*^9}, {
   3.8073801302746553`*^9, 3.8073801384158783`*^9}, {3.807380172926056*^9, 
   3.80738020275187*^9}, {3.807383989853836*^9, 3.8073840396014633`*^9}, 
   3.807384149635829*^9, 3.807384225742405*^9, {3.807384334914349*^9, 
   3.8073843666590014`*^9}, {3.807384835453597*^9, 3.807384842940456*^9}, {
   3.807384879000372*^9, 3.807384884051423*^9}, 3.807385088094866*^9, 
   3.8074437548483667`*^9, {3.807443786953533*^9, 3.807443819640033*^9}, 
   3.80744390047475*^9, {3.807444205841631*^9, 3.807444259224362*^9}, 
   3.807444507346602*^9, 3.807444540708177*^9, {3.807444619930278*^9, 
   3.8074447516502113`*^9}, {3.807445025830392*^9, 3.807445036344325*^9}}]
}, Open  ]],

Cell["\<\
Hence we conclude the definitio is only effective assymptotically as delta \
tends to zero. \
\>", "Text",
 CellChangeTimes->{{3.8074450643461723`*^9, 3.80744507045821*^9}, {
  3.807445782995372*^9, 3.807445811171854*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"toPlot", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{
       RowBox[{"p", "[", 
        RowBox[{"x", ",", " ", 
         StyleBox["\[Mu]", "TR"], ",", 
         StyleBox["\[Sigma]", "TR"]}], 
        StyleBox[" ", "TR"], "]"}], "/", 
       RowBox[{"pdelta1", "[", 
        RowBox[{"x", ",", 
         StyleBox["\[Mu]", "TR"], ",", "\[Sigma]", ",", "delt"}], "]"}]}]}], 
     " ", "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
      RowBox[{"\[Mu]", "\[Rule]", "0"}], ",", 
      RowBox[{"delt", "\[Rule]", "0.95"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"toPlot", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2.5"}], ",", "2.5"}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.662153"}], ",", "0.662153", ",", " ", 
       RowBox[{"-", "2.13577"}], ",", " ", "2.13577"}], "}"}], " ", "}"}]}]}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"toPlot", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p", "[", 
       RowBox[{"x", ",", " ", 
        StyleBox["\[Mu]", "TR"], ",", 
        StyleBox["\[Sigma]", "TR"]}], 
       StyleBox[" ", "TR"], "]"}], ",", 
      RowBox[{"pdelta1", "[", 
       RowBox[{"x", ",", 
        StyleBox["\[Mu]", "TR"], ",", "\[Sigma]", ",", "delt"}], "]"}]}], " ",
      "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Sigma]", "\[Rule]", "1"}], ",", 
      RowBox[{"\[Mu]", "\[Rule]", "0"}], ",", 
      RowBox[{"delt", "\[Rule]", "0.95"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"toPlot", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2.5"}], ",", "2.5"}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.662153"}], ",", "0.662153", ",", " ", 
       RowBox[{"-", "2.13577"}], ",", " ", "2.13577"}], "}"}], " ", "}"}]}]}],
   "]"}]}], "Input",
 CellChangeTimes->{{3.807444283217866*^9, 3.807444283553138*^9}, 
   3.807444740315668*^9, {3.8074458186690474`*^9, 3.807445842422085*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQXfvc99P//8wHGMDgg/2UkgTvhtkI/mrG4iUM5gg+
a6q7kWQsE5wvfONozqKJjHB+0OFZyZqnGOD86ve2ORMe/98P4+8on5W13v8f
nO83KVTh38w/cL773L1+Hm9+wfnLjldeK47+CefHtUwRPb/iO5xfl8C8jlv4
G5zPoCu/37n1C5x/q3tm++qrn+B8Ga6MlV+cPsL52aZarLdl3sP5yeb3Vhw+
/BrO16qw+p+35AWcv/Bu8JFKx6dw/vNGURt3iUdw/q6pGq4vwu7C+QYvb37R
n3sNznfZdZvzb9gFOL9g5fofgsKH4fywNOWFl2pWwvnHz9zsMg5eYQ/jW+ke
3BQw/TCcz1QmeidF8gKcz84T0Jj07hqc3/zgmnPR4rtw/obZbQF1nx7C+fmL
UgSehD2F8+OyZsm2N76A8zsDyyyN57yG81lEpj6r//UOzr9+uvVDC/9HOD+0
Osls1uFPcH4O92ulc1Ff4Hz51cemsb36CudX73AO5p/9Hc4vWJazzUz/J5zP
w2SepPf0F5zvmhsyVWvyHzhfYqdsvqvKPzh/UlHHRIPr/+H8oDZ/3bnbGBzg
8RndErqklhHOv/aMc9HkUCY4/1zSU0cheWY4X22ppFRnP4IPzS9wPgBHkxF5

      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
/z/xP59SDDA=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{-0.662153, 0.662153, -2.13577, 2.13577}, {-0.662153, 
   0.662153, -2.13577, 2.13577}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.5, 2.5}, {0., 3.8219833007394537`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.807444284296878*^9, 3.80744584383494*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
esVBgf/b38D+f3/jfwCEDnwR
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]], 
     LineBox[CompressedData["
1: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
LyvDQHCv9ejcHJ0Qtzh+yEOcgf8AgT++Gg==
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{-0.662153, 0.662153, -2.13577, 2.13577}, {-0.662153, 
   0.662153, -2.13577, 2.13577}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.5, 2.5}, {0., 0.6606718419043771}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.807444284296878*^9, 3.807445843902773*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", "\[Mu]"}], "-", 
     RowBox[{
      SqrtBox["2"], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"5", " ", 
         SuperscriptBox["\[Sigma]", "2"]}], "-", 
        RowBox[{
         SqrtBox["17"], " ", 
         SuperscriptBox["\[Sigma]", "2"]}]}]]}]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.807366932699894*^9, {3.807366989340106*^9, 3.807366989716*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.807366888234076*^9, 3.807366904859314*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Student T Distribuion with scale s and tail exponent \[Alpha]", \
"Section",
 CellChangeTimes->{{3.80736655040198*^9, 3.8073666122341347`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"st", "[", 
   RowBox[{"x_", ",", " ", 
    StyleBox["\[Alpha]_",
     FontSize->10], 
    StyleBox[",",
     FontSize->10], 
    StyleBox[" ",
     FontSize->10], "s_"}], "]"}], ":=", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      StyleBox["\[Alpha]",
       FontSize->10], 
      RowBox[{"\[Alpha]", "+", " ", 
       FractionBox[
        SuperscriptBox["x", "2"], 
        SuperscriptBox["s", "2"]]}]], ")"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Alpha]", "+", "1"}], ")"}], "/", "2"}]], 
   RowBox[{
    RowBox[{"Sqrt", "[", "\[Alpha]", "]"}], "s", " ", 
    RowBox[{"Beta", "[", 
     RowBox[{
      RowBox[{"\[Alpha]", "/", "2"}], ",", 
      RowBox[{"1", "/", "2"}]}], "]"}]}]]}]], "Input",
 CellChangeTimes->{{3.806330012050956*^9, 3.806330037987977*^9}, {
  3.8063300838864727`*^9, 3.806330253165084*^9}, {3.806330353739607*^9, 
  3.806330357551526*^9}, {3.807445911142139*^9, 3.807445912390086*^9}, {
  3.807446037356814*^9, 3.807446049830303*^9}, {3.807449534023069*^9, 
  3.807449534294794*^9}}],

Cell["Let us re-express this expression in terns of its variance:", "Text",
 CellChangeTimes->{{3.807445923756748*^9, 3.807445946467451*^9}, 
   3.807445988413198*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"st", "[", 
     RowBox[{"x", ",", "\[Alpha]", ",", "s"}], "]"}], "1"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", ">", "2"}], "&&", " ", 
      RowBox[{"s", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.807446382166217*^9, 3.807446382275941*^9}, {
   3.8074464566845303`*^9, 3.80744645675696*^9}, 3.8074467938554487`*^9, 
   3.807449549370042*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.80744599595389*^9, 3.80744638929119*^9, 
  3.8074467982783127`*^9, 3.807449555779901*^9, 3.8074531352943296`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"st", "[", 
     RowBox[{"x", ",", "\[Alpha]", ",", "s"}], "]"}], "x"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", ">", "2"}], "&&", " ", 
      RowBox[{"s", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.807446383836343*^9, 3.807446385460154*^9}, {
   3.807446460244143*^9, 3.807446460300152*^9}, 3.807446795672207*^9, 
   3.807449552321011*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.806330716948785*^9, 3.807446394948965*^9, 
  3.807446460861812*^9, 3.807446798441457*^9, 3.807449555939178*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"st", "[", 
     RowBox[{"x", ",", "\[Alpha]", ",", "s"}], "]"}], 
    RowBox[{"x", "^", "2"}]}], " ", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", ">", "2"}], "&&", " ", 
      RowBox[{"s", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.80745343277109*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["s", "2"], " ", "\[Alpha]"}], 
  RowBox[{
   RowBox[{"-", "2"}], "+", "\[Alpha]"}]]], "Output",
 CellChangeTimes->{3.807453433738574*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"VarianceDefinition", " ", "=", " ", 
  RowBox[{"Solve", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"st", "[", 
         RowBox[{"x", ",", "\[Alpha]", ",", "s"}], "]"}], 
        RowBox[{"x", "^", "2"}]}], " ", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}], ",", 
       " ", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Alpha]", ">", "2"}], "&&", " ", 
          RowBox[{"s", ">", "0"}]}], "}"}]}]}], "]"}], "\[Equal]", 
     RowBox[{"\[Sigma]", "^", "2"}]}], ",", "\[Sigma]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"AlphaDefinition", " ", "=", " ", 
  RowBox[{"Solve", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"st", "[", 
         RowBox[{"x", ",", "\[Alpha]", ",", "s"}], "]"}], 
        RowBox[{"x", "^", "2"}]}], " ", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}], ",", 
       " ", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Alpha]", ">", "2"}], "&&", " ", 
          RowBox[{"s", ">", "0"}]}], "}"}]}]}], "]"}], "\[Equal]", 
     RowBox[{"\[Sigma]", "^", "2"}]}], ",", " ", "\[Alpha]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.807446397277293*^9, 3.807446452292899*^9}, {
  3.807446563117155*^9, 3.807446628767964*^9}, {3.807446771693451*^9, 
  3.807446786559622*^9}, {3.807449558105468*^9, 3.80744955975344*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Sigma]", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"s", " ", 
        SqrtBox["\[Alpha]"]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Alpha]"}]]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Sigma]", "\[Rule]", 
     FractionBox[
      RowBox[{"s", " ", 
       SqrtBox["\[Alpha]"]}], 
      SqrtBox[
       RowBox[{
        RowBox[{"-", "2"}], "+", "\[Alpha]"}]]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8074464077503157`*^9, 3.807446427266119*^9}, 
   3.807446466791301*^9, {3.807446569685828*^9, 3.807446630095429*^9}, {
   3.807446788403308*^9, 3.807446799912973*^9}, 3.807449561308427*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Alpha]", "\[Rule]", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[Sigma]", "2"]}], 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["s", "2"]}], "+", 
      SuperscriptBox["\[Sigma]", "2"]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.8074464077503157`*^9, 3.807446427266119*^9}, 
   3.807446466791301*^9, {3.807446569685828*^9, 3.807446630095429*^9}, {
   3.807446788403308*^9, 3.807446799912973*^9}, 3.807449561580488*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"zeros", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "->", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"s", 
          SqrtBox[
           RowBox[{
            FractionBox[
             RowBox[{" ", 
              RowBox[{
               RowBox[{"5", "\[Alpha]"}], "+", 
               SqrtBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"\[Alpha]", "+", "1"}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"17", " ", "\[Alpha]"}], "+", "1"}], ")"}]}]], "+",
                "1"}]}], 
             RowBox[{"\[Alpha]", "-", "1"}]], " "}]]}], 
         SqrtBox["2"]]}]}], ",", 
      RowBox[{"x", "->", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"s", 
          SqrtBox[
           RowBox[{
            FractionBox[
             RowBox[{" ", 
              RowBox[{
               RowBox[{"5", "\[Alpha]"}], "-", 
               SqrtBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"\[Alpha]", "+", "1"}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"17", " ", "\[Alpha]"}], "+", "1"}], ")"}]}]], "+",
                "1"}]}], 
             RowBox[{"\[Alpha]", "-", "1"}]], " "}]]}], 
         SqrtBox["2"]]}]}], ",", 
      RowBox[{"x", "->", 
       FractionBox[
        RowBox[{"s", 
         SqrtBox[
          RowBox[{
           FractionBox[
            RowBox[{" ", 
             RowBox[{
              RowBox[{"5", "\[Alpha]"}], "-", 
              SqrtBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"\[Alpha]", "+", "1"}], ")"}], 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"17", " ", "\[Alpha]"}], "+", "1"}], ")"}]}]], "+", 
              "1"}]}], 
            RowBox[{"\[Alpha]", "-", "1"}]], " "}]]}], 
        SqrtBox["2"]]}], ",", 
      RowBox[{"x", "->", 
       FractionBox[
        RowBox[{"s", 
         SqrtBox[
          RowBox[{
           FractionBox[
            RowBox[{" ", 
             RowBox[{
              RowBox[{"5", "\[Alpha]"}], "+", 
              SqrtBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"\[Alpha]", "+", "1"}], ")"}], 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"17", " ", "\[Alpha]"}], "+", "1"}], ")"}]}]], "+", 
              "1"}]}], 
            RowBox[{"\[Alpha]", "-", "1"}]], " "}]]}], 
        SqrtBox["2"]]}]}], "}"}]}], " ", ";"}],
  FontSize->14], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"zerovalues", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"s", 
         SqrtBox[
          RowBox[{
           FractionBox[
            RowBox[{" ", 
             RowBox[{
              RowBox[{"5", "\[Alpha]"}], "+", 
              SqrtBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"\[Alpha]", "+", "1"}], ")"}], 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"17", " ", "\[Alpha]"}], "+", "1"}], ")"}]}]], "+", 
              "1"}]}], 
            RowBox[{"\[Alpha]", "-", "1"}]], " "}]]}], 
        SqrtBox["2"]]}], ",", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"s", 
         SqrtBox[
          RowBox[{
           FractionBox[
            RowBox[{" ", 
             RowBox[{
              RowBox[{"5", "\[Alpha]"}], "-", 
              SqrtBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"\[Alpha]", "+", "1"}], ")"}], 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"17", " ", "\[Alpha]"}], "+", "1"}], ")"}]}]], "+", 
              "1"}]}], 
            RowBox[{"\[Alpha]", "-", "1"}]], " "}]]}], 
        SqrtBox["2"]]}], ",", 
      FractionBox[
       RowBox[{"s", 
        SqrtBox[
         RowBox[{
          FractionBox[
           RowBox[{" ", 
            RowBox[{
             RowBox[{"5", "\[Alpha]"}], "-", 
             SqrtBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"\[Alpha]", "+", "1"}], ")"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"17", " ", "\[Alpha]"}], "+", "1"}], ")"}]}]], "+", 
             "1"}]}], 
           RowBox[{"\[Alpha]", "-", "1"}]], " "}]]}], 
       SqrtBox["2"]], ",", 
      FractionBox[
       RowBox[{"s", 
        SqrtBox[
         RowBox[{
          FractionBox[
           RowBox[{" ", 
            RowBox[{
             RowBox[{"5", "\[Alpha]"}], "+", 
             SqrtBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"\[Alpha]", "+", "1"}], ")"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"17", " ", "\[Alpha]"}], "+", "1"}], ")"}]}]], "+", 
             "1"}]}], 
           RowBox[{"\[Alpha]", "-", "1"}]], " "}]]}], 
       SqrtBox["2"]]}], "}"}], 
    StyleBox[
     RowBox[{"/", "."}]], 
    RowBox[{"AlphaDefinition", " ", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}],
  FontSize->14]}], "Input",
 CellChangeTimes->{{3.80744670364744*^9, 3.807446756745019*^9}, {
  3.807447035551999*^9, 3.807447040959033*^9}, {3.8074470735283737`*^9, 
  3.807447082416092*^9}, {3.8074474413923187`*^9, 3.807447441894732*^9}, {
  3.8074475036730423`*^9, 3.80744754825881*^9}, {3.807447666282425*^9, 
  3.807447681137093*^9}, {3.8074479172680798`*^9, 3.8074479225539007`*^9}, {
  3.807450462162472*^9, 3.8074505711314163`*^9}, {3.807450638997178*^9, 
  3.807450659363594*^9}, {3.807453724482712*^9, 3.807453766217602*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"s", " ", 
      SqrtBox[
       FractionBox[
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{"10", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["s", "2"]}], "+", 
           SuperscriptBox["\[Sigma]", "2"]}]], "+", 
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox[
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}], 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["s", "2"]}], "+", 
               SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox[
              RowBox[{"34", " ", 
               SuperscriptBox["\[Sigma]", "2"]}], 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["s", "2"]}], "+", 
               SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}]}]]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         FractionBox[
          RowBox[{"2", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["s", "2"]}], "+", 
           SuperscriptBox["\[Sigma]", "2"]}]]}]]]}], 
     SqrtBox["2"]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"s", " ", 
      SqrtBox[
       FractionBox[
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{"10", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["s", "2"]}], "+", 
           SuperscriptBox["\[Sigma]", "2"]}]], "-", 
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox[
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}], 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["s", "2"]}], "+", 
               SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox[
              RowBox[{"34", " ", 
               SuperscriptBox["\[Sigma]", "2"]}], 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["s", "2"]}], "+", 
               SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}]}]]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         FractionBox[
          RowBox[{"2", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["s", "2"]}], "+", 
           SuperscriptBox["\[Sigma]", "2"]}]]}]]]}], 
     SqrtBox["2"]]}], ",", 
   FractionBox[
    RowBox[{"s", " ", 
     SqrtBox[
      FractionBox[
       RowBox[{"1", "+", 
        FractionBox[
         RowBox[{"10", " ", 
          SuperscriptBox["\[Sigma]", "2"]}], 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["s", "2"]}], "+", 
          SuperscriptBox["\[Sigma]", "2"]}]], "-", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox[
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}], 
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["s", "2"]}], "+", 
              SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox[
             RowBox[{"34", " ", 
              SuperscriptBox["\[Sigma]", "2"]}], 
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["s", "2"]}], "+", 
              SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}]}]]}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["\[Sigma]", "2"]}], 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["s", "2"]}], "+", 
          SuperscriptBox["\[Sigma]", "2"]}]]}]]]}], 
    SqrtBox["2"]], ",", 
   FractionBox[
    RowBox[{"s", " ", 
     SqrtBox[
      FractionBox[
       RowBox[{"1", "+", 
        FractionBox[
         RowBox[{"10", " ", 
          SuperscriptBox["\[Sigma]", "2"]}], 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["s", "2"]}], "+", 
          SuperscriptBox["\[Sigma]", "2"]}]], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox[
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}], 
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["s", "2"]}], "+", 
              SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            FractionBox[
             RowBox[{"34", " ", 
              SuperscriptBox["\[Sigma]", "2"]}], 
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["s", "2"]}], "+", 
              SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}]}]]}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["\[Sigma]", "2"]}], 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["s", "2"]}], "+", 
          SuperscriptBox["\[Sigma]", "2"]}]]}]]]}], 
    SqrtBox["2"]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.807447923193*^9, {3.807449589736911*^9, 3.807449590840227*^9}, 
   3.8074506615748367`*^9, {3.807453730682477*^9, 3.807453767216474*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SecondDerivarive", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"st", "[", 
           RowBox[{"x", " ", ",", "\[Alpha]", " ", ",", "s"}], "]"}], "/.", 
          "AlphaDefinition"}], ")"}], ",", " ", "\[Sigma]"}], "]"}], ",", " ",
       "\[Sigma]"}], "]"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SecondDerivarive", "=", 
   RowBox[{"SecondDerivarive", "/.", 
    RowBox[{"VarianceDefinition", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.807447101641507*^9, 3.807447270767057*^9}, {
   3.807447333304147*^9, 3.807447419807509*^9}, 3.80744959566578*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<=", "4"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"SecondDerivarive", "/.", " ", 
       RowBox[{"zeros", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Alpha]", "\[Rule]", "4"}], ",", " ", 
        RowBox[{"s", "\[Rule]", "10"}]}], "}"}]}], " ", "//", "N"}], "]"}]}], 
  " ", "]"}]], "Input",
 CellChangeTimes->{{3.807447429208405*^9, 3.8074474677135687`*^9}, {
  3.807447583146727*^9, 3.8074476208324633`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", "0.00005398155366951412`"}], "}"}]], "Print",
 CellChangeTimes->{
  3.8074474684651527`*^9, 3.8074475195253677`*^9, 3.807447559311988*^9, {
   3.8074476076020803`*^9, 3.8074476214547997`*^9}, 3.807449603806353*^9, 
   3.807450664706856*^9}],

Cell[BoxData[
 RowBox[{"{", "0.00009569581627790418`", "}"}]], "Print",
 CellChangeTimes->{
  3.8074474684651527`*^9, 3.8074475195253677`*^9, 3.807447559311988*^9, {
   3.8074476076020803`*^9, 3.8074476214547997`*^9}, 3.807449603806353*^9, 
   3.807450664714239*^9}],

Cell[BoxData[
 RowBox[{"{", "0.00009569581627790418`", "}"}]], "Print",
 CellChangeTimes->{
  3.8074474684651527`*^9, 3.8074475195253677`*^9, 3.807447559311988*^9, {
   3.8074476076020803`*^9, 3.8074476214547997`*^9}, 3.807449603806353*^9, 
   3.807450664720853*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", "0.00005398155366951412`"}], "}"}]], "Print",
 CellChangeTimes->{
  3.8074474684651527`*^9, 3.8074475195253677`*^9, 3.807447559311988*^9, {
   3.8074476076020803`*^9, 3.8074476214547997`*^9}, 3.807449603806353*^9, 
   3.807450664727268*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<=", "4"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"SecondDerivarive", "/.", " ", 
       RowBox[{"zeros", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Alpha]", "\[Rule]", "3"}], ",", " ", 
        RowBox[{"s", "\[Rule]", "2.5"}]}], "}"}]}], " ", "//", "N"}], "]"}]}],
   " ", "]"}]], "Input",
 CellChangeTimes->{{3.807447629335908*^9, 3.807447633464419*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", "0.0010027848057491836`"}], "}"}]], "Print",
 CellChangeTimes->{3.807447633739608*^9, 3.807447721904557*^9, 
  3.8074496083369513`*^9, 3.807450667121954*^9}],

Cell[BoxData[
 RowBox[{"{", "0.0024951636130377125`", "}"}]], "Print",
 CellChangeTimes->{3.807447633739608*^9, 3.807447721904557*^9, 
  3.8074496083369513`*^9, 3.8074506671285152`*^9}],

Cell[BoxData[
 RowBox[{"{", "0.0024951636130377125`", "}"}]], "Print",
 CellChangeTimes->{3.807447633739608*^9, 3.807447721904557*^9, 
  3.8074496083369513`*^9, 3.807450667135064*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", "0.0010027848057491836`"}], "}"}]], "Print",
 CellChangeTimes->{3.807447633739608*^9, 3.807447721904557*^9, 
  3.8074496083369513`*^9, 3.807450667141429*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.807453124140089*^9, 3.8074531254471407`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"prev", "=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"st", "[", 
      RowBox[{"x", ",", " ", "\[Alpha]", ",", "s"}], "]"}], "/.", 
     RowBox[{"AlphaDefinition", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], " ", ")"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pst", "[", 
   RowBox[{"x_", ",", "s_", ",", 
    StyleBox["\[Sigma]_", "TR"]}], 
   StyleBox[" ", "TR"], 
   StyleBox["]", "TR"]}], "=", "prev"}]}], "Input",
 CellChangeTimes->{{3.807447939242217*^9, 3.807447959811048*^9}, {
   3.8074493258092957`*^9, 3.80744932899187*^9}, {3.807449437543929*^9, 
   3.807449480241013*^9}, {3.807449525848894*^9, 3.807449526093936*^9}, {
   3.807449612336658*^9, 3.8074496125190697`*^9}, {3.807449795520907*^9, 
   3.807449829166272*^9}, {3.807449890279952*^9, 3.8074499203585567`*^9}, {
   3.8074502296107197`*^9, 3.8074502310156097`*^9}, {3.807451328546687*^9, 
   3.807451333611248*^9}, {3.807451435468494*^9, 3.8074514457470922`*^9}, {
   3.807451487628228*^9, 3.807451577559366*^9}, {3.807451609687468*^9, 
   3.807451652661601*^9}, 3.80745224728025*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["\[Sigma]", "2"]}], 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["s", "2"]}], "+", 
          SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}]}]}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      SuperscriptBox["\[Sigma]", "2"], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["s", "2"]}], "+", 
         SuperscriptBox["\[Sigma]", "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          SuperscriptBox["x", "2"], 
          SuperscriptBox["s", "2"]], "+", 
         FractionBox[
          RowBox[{"2", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["s", "2"]}], "+", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}]}]], ")"}], 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["\[Sigma]", "2"]}], 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["s", "2"]}], "+", 
         SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}]}]]}], 
  RowBox[{"s", " ", 
   SqrtBox[
    FractionBox[
     SuperscriptBox["\[Sigma]", "2"], 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["s", "2"]}], "+", 
      SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
   RowBox[{"Beta", "[", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[Sigma]", "2"], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["s", "2"]}], "+", 
       SuperscriptBox["\[Sigma]", "2"]}]], ",", 
     FractionBox["1", "2"]}], "]"}]}]]], "Output",
 CellChangeTimes->{
  3.807451446117441*^9, {3.807451497492785*^9, 3.807451528375039*^9}, {
   3.807451570486266*^9, 3.807451578209691*^9}, {3.807451628911049*^9, 
   3.807451653238268*^9}, 3.8074522482667847`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"pstdelta2", "[", 
      RowBox[{"x_", ",", "s_", 
       StyleBox[" ", "TR"], ",", "\[Sigma]_", ",", "delt_"}], "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"pst", "[", 
         RowBox[{"x", ",", " ", "s", ",", 
          RowBox[{
           StyleBox["\[Sigma]", "TR"], 
           SqrtBox[
            RowBox[{"1", "+", "delt"}]]}]}], "]"}], "+", 
        RowBox[{"pst", "[", 
         RowBox[{"x", ",", " ", "s", ",", 
          RowBox[{
           StyleBox["\[Sigma]", "TR"], 
           SqrtBox[
            RowBox[{"1", "-", "delt"}]]}]}], 
         StyleBox[" ", "TR"], "]"}]}], ")"}], "/", "2"}]}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pstdelta1", "[", 
      RowBox[{"x_", ",", "s_", 
       StyleBox[" ", "TR"], ",", "\[Sigma]_", ",", "delt_"}], "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"pst", "[", 
         RowBox[{"x", ",", " ", "s", ",", 
          RowBox[{
           StyleBox["\[Sigma]", "TR"], 
           StyleBox["+", "TR"], "delt"}]}], "]"}], "+", 
        RowBox[{"pst", "[", 
         RowBox[{"x", ",", " ", "s", ",", 
          RowBox[{
           StyleBox["\[Sigma]", "TR"], "-", "delt"}]}], 
         StyleBox[" ", "TR"], "]"}]}], ")"}], "/", "2"}]}], " ", 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.807451451132234*^9, 3.807451466659778*^9}, {
   3.807451663245944*^9, 3.80745168255912*^9}, 3.807453082257785*^9, {
   3.807454605250093*^9, 3.807454643938773*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pstdelta1", "[", 
  RowBox[{"x", ",", "s", ",", "\[Sigma]", ",", "d"}], "]"}]], "Input",
 CellChangeTimes->{{3.807453172711841*^9, 3.8074531788484898`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["2", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "d"}], "+", "\[Sigma]"}], ")"}], "2"]}], 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["s", "2"]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "d"}], "+", "\[Sigma]"}], ")"}], "2"]}]]}], 
          ")"}]}]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "d"}], "+", "\[Sigma]"}], ")"}], "2"], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["s", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "d"}], "+", "\[Sigma]"}], ")"}], "2"]}], ")"}], 
          " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             SuperscriptBox["x", "2"], 
             SuperscriptBox["s", "2"]], "+", 
            FractionBox[
             RowBox[{"2", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "d"}], "+", "\[Sigma]"}], ")"}], "2"]}], 
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["s", "2"]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "d"}], "+", "\[Sigma]"}], ")"}], "2"]}]]}], 
           ")"}]}]], ")"}], 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"2", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "d"}], "+", "\[Sigma]"}], ")"}], "2"]}], 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["s", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "d"}], "+", "\[Sigma]"}], ")"}], "2"]}]]}], 
         ")"}]}]]}], 
     RowBox[{"s", " ", 
      SqrtBox[
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "d"}], "+", "\[Sigma]"}], ")"}], "2"], 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["s", "2"]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "d"}], "+", "\[Sigma]"}], ")"}], "2"]}]]], " ", 
      RowBox[{"Beta", "[", 
       RowBox[{
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "d"}], "+", "\[Sigma]"}], ")"}], "2"], 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["s", "2"]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "d"}], "+", "\[Sigma]"}], ")"}], "2"]}]], ",", 
        FractionBox["1", "2"]}], "]"}]}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["2", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"d", "+", "\[Sigma]"}], ")"}], "2"]}], 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["s", "2"]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"d", "+", "\[Sigma]"}], ")"}], "2"]}]]}], ")"}]}]}]], 
      " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"d", "+", "\[Sigma]"}], ")"}], "2"], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["s", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"d", "+", "\[Sigma]"}], ")"}], "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             SuperscriptBox["x", "2"], 
             SuperscriptBox["s", "2"]], "+", 
            FractionBox[
             RowBox[{"2", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"d", "+", "\[Sigma]"}], ")"}], "2"]}], 
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["s", "2"]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"d", "+", "\[Sigma]"}], ")"}], "2"]}]]}], ")"}]}]], 
        ")"}], 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"2", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"d", "+", "\[Sigma]"}], ")"}], "2"]}], 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["s", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"d", "+", "\[Sigma]"}], ")"}], "2"]}]]}], ")"}]}]]}], 
     RowBox[{"s", " ", 
      SqrtBox[
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"d", "+", "\[Sigma]"}], ")"}], "2"], 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["s", "2"]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"d", "+", "\[Sigma]"}], ")"}], "2"]}]]], " ", 
      RowBox[{"Beta", "[", 
       RowBox[{
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"d", "+", "\[Sigma]"}], ")"}], "2"], 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["s", "2"]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"d", "+", "\[Sigma]"}], ")"}], "2"]}]], ",", 
        FractionBox["1", "2"]}], "]"}]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.807453179616766*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"vals", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Sigma]", "\[Rule]", 
     SqrtBox["3"]}], ",", 
    RowBox[{"s", "\[Rule]", 
     RowBox[{
      SqrtBox["3"], "/", "2"}]}], ",", 
    RowBox[{"delt", "\[Rule]", 
     RowBox[{
      SqrtBox["3"], "/", "100"}]}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"gridlines", "=", " ", 
  RowBox[{
   RowBox[{"zerosvalues", "/.", "vals"}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"toPlot", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{
       RowBox[{"pst", "[", 
        RowBox[{"x", ",", " ", "s", ",", 
         StyleBox["\[Sigma]", "TR"]}], 
        StyleBox[" ", "TR"], "]"}], "/", 
       RowBox[{"pstdelta2", "[", 
        RowBox[{"x", ",", "s", ",", "\[Sigma]", ",", "delt"}], "]"}]}]}], " ",
      "}"}], "/.", "vals"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"toPlot", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"gridlines", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "-", "0.2"}], ",", 
     RowBox[{
      RowBox[{"gridlines", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "+", "0.2"}]}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", "gridlines", " ", "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"toPlot", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"pst", "[", 
       RowBox[{"x", ",", " ", "s", ",", 
        StyleBox["\[Sigma]", "TR"]}], 
       StyleBox[" ", "TR"], "]"}], ",", 
      RowBox[{"pstdelta2", "[", 
       RowBox[{"x", ",", "s", ",", "\[Sigma]", ",", "delt"}], "]"}]}], " ", 
     "}"}], "/.", "vals"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"toPlot", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"gridlines", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "-", "0.2"}], ",", 
     RowBox[{
      RowBox[{"gridlines", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "+", "0.2"}]}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", "gridlines", " ", "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.807449867816063*^9, 3.807449874966989*^9}, {
  3.807449987994522*^9, 3.8074501511034718`*^9}, {3.8074502523966312`*^9, 
  3.80745037226484*^9}, {3.807450402473962*^9, 3.807450408024342*^9}, {
  3.8074506857402153`*^9, 3.807450735905868*^9}, {3.807450868644182*^9, 
  3.8074509321936817`*^9}, {3.807450992324799*^9, 3.8074510221221237`*^9}, {
  3.8074511052628803`*^9, 3.807451120267146*^9}, {3.807451690279251*^9, 
  3.807451691278762*^9}, {3.80745172412667*^9, 3.8074517578698263`*^9}, {
  3.807451808097177*^9, 3.807451913007637*^9}, {3.807452025635291*^9, 
  3.80745205260847*^9}, {3.807452083215822*^9, 3.8074521085916157`*^9}, {
  3.807452142098682*^9, 3.8074521726488667`*^9}, {3.8074538491646214`*^9, 
  3.807453879194086*^9}, {3.8074546623082438`*^9, 3.807454665258273*^9}, {
  3.8074549734058437`*^9, 3.807454973482607*^9}, {3.807455022348564*^9, 
  3.807455024444006*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Sigma]", "\[Rule]", 
    SqrtBox["3"]}], ",", 
   RowBox[{"s", "\[Rule]", 
    FractionBox[
     SqrtBox["3"], "2"]}], ",", 
   RowBox[{"delt", "\[Rule]", 
    FractionBox[
     SqrtBox["3"], "100"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.807450107816661*^9, 3.807450151688466*^9}, 
   3.807450234323058*^9, 3.807450280956608*^9, {3.807450316389776*^9, 
   3.807450367740184*^9}, {3.807450398172957*^9, 3.807450408389529*^9}, {
   3.807450670220667*^9, 3.8074507370912313`*^9}, {3.807450888039207*^9, 
   3.807450933138418*^9}, {3.807450993223157*^9, 3.8074510228564377`*^9}, {
   3.807451106788621*^9, 3.807451120973078*^9}, {3.8074516676141376`*^9, 
   3.807451691957286*^9}, {3.807451726294491*^9, 3.807451758610443*^9}, {
   3.807451811260674*^9, 3.807451872661121*^9}, {3.807451903291706*^9, 
   3.807451913658021*^9}, 3.807452053841406*^9, {3.807452084563612*^9, 
   3.8074521092464113`*^9}, {3.8074521430254297`*^9, 3.807452173464899*^9}, 
   3.807453093195869*^9, {3.807453841627644*^9, 3.8074538806176777`*^9}, 
   3.8074546661961718`*^9, 3.807454973880992*^9, 3.807455024966724*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.4814677550600117`"}], ",", 
   RowBox[{"-", "0.5406642031773764`"}], ",", "0.5406642031773764`", ",", 
   "2.4814677550600117`"}], "}"}]], "Output",
 CellChangeTimes->{{3.807450107816661*^9, 3.807450151688466*^9}, 
   3.807450234323058*^9, 3.807450280956608*^9, {3.807450316389776*^9, 
   3.807450367740184*^9}, {3.807450398172957*^9, 3.807450408389529*^9}, {
   3.807450670220667*^9, 3.8074507370912313`*^9}, {3.807450888039207*^9, 
   3.807450933138418*^9}, {3.807450993223157*^9, 3.8074510228564377`*^9}, {
   3.807451106788621*^9, 3.807451120973078*^9}, {3.8074516676141376`*^9, 
   3.807451691957286*^9}, {3.807451726294491*^9, 3.807451758610443*^9}, {
   3.807451811260674*^9, 3.807451872661121*^9}, {3.807451903291706*^9, 
   3.807451913658021*^9}, 3.807452053841406*^9, {3.807452084563612*^9, 
   3.8074521092464113`*^9}, {3.8074521430254297`*^9, 3.807452173464899*^9}, 
   3.807453093195869*^9, {3.807453841627644*^9, 3.8074538806176777`*^9}, 
   3.8074546661961718`*^9, 3.807454973880992*^9, 3.807455024977907*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7V0v6b+0mPUAAxh8sBdtd9W8xY7g3+8rZOafwwLn
P0hblhG2iRnO7/G3Oi91gwnOP28QLqPOhODX3wqQEpRihPNvTVkpWeHIAOe7
6e+bXLn2334Yn1XN+uCkB3/gfCm7so9LjX7D+VzPs5pLEn7C+f4bZSVs136H
8w/mPKqcyvQNzuffmWC70vgLnL9JbS7z9uZPcL6h6mTthvUf4PxdmmaOm46/
hfP3eh8yiMh7BeeX9x98XHLmGZx/R9R2TmvGYzj/fXW4gVTFfTj/1oSamAzH
G3C+jPasyfPaLsL50wRtFreUHoHz2+IuXykIWw3nr0/mdjQXX2UP489nenc8
hvkonH9Z4MqVXpeLcP7LO6f21c+4Aed7P6ksMTp1H87XMZ7R/8/+MZxfHdSg
mPv4GZwvr/9m7XOPV3B+pqbJAqe5b+H8fw0t6cJzP8D5n04b1HT7fILzuduU
9T0UvsD55+Qi7nNd/Qrnpx6rOmTb+B3OV7j72Hlr4E84v+1S3yEj5t9wvoB5
w/0vN/7A+Xmr4vXVl/2D863rHPbpazE4wPgX474Y5wkzwvl79DxX6L9F8AXZ
RM1WHmKC83+IsAi7rmKG802Ep7xLbmKB8x1OXpvH8hvBh+YXOB8AXYwGvg==

      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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

      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9999827783524783},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{-2.4814677550600117`, -0.5406642031773764, 0.5406642031773764, 
   2.4814677550600117`}, {-2.4814677550600117`, -0.5406642031773764, 
   0.5406642031773764, 2.4814677550600117`}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.681467755060012, 2.681467755060012}, {0.9999827783524783, 
   1.0000279236223097`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.807450107816661*^9, 3.807450151688466*^9}, 
   3.807450234323058*^9, 3.807450280956608*^9, {3.807450316389776*^9, 
   3.807450367740184*^9}, {3.807450398172957*^9, 3.807450408389529*^9}, {
   3.807450670220667*^9, 3.8074507370912313`*^9}, {3.807450888039207*^9, 
   3.807450933138418*^9}, {3.807450993223157*^9, 3.8074510228564377`*^9}, {
   3.807451106788621*^9, 3.807451120973078*^9}, {3.8074516676141376`*^9, 
   3.807451691957286*^9}, {3.807451726294491*^9, 3.807451758610443*^9}, {
   3.807451811260674*^9, 3.807451872661121*^9}, {3.807451903291706*^9, 
   3.807451913658021*^9}, 3.807452053841406*^9, {3.807452084563612*^9, 
   3.8074521092464113`*^9}, {3.8074521430254297`*^9, 3.807452173464899*^9}, 
   3.807453093195869*^9, {3.807453841627644*^9, 3.8074538806176777`*^9}, 
   3.8074546661961718`*^9, 3.807454973880992*^9, 3.807455025312003*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJw113k4lG/UB3CGSWixpBgtQrayRBHiTLZKShEpFJEtaUN2UVHILyTMGI1I
IVmyZMk99mWKrDPzJFPZQkmKSHif97re94+5nuvz13PPub/nPNfZfv6y1QUC
Dw/PGP773+eRcCnLp9eJjBIV6iPRgxSI4U7Mml0hMnI0y+UnrSjQCjXpX72J
jFL/GEnmWQqY8Jyb2OlGZOh7zJIz/ClgGJF9p8SOyDjcEkFIzKGAxi31GmRA
ZDiE7q8tEaCCRLSpMiZAZKwI5xyb7aACN/4q3/p0fsb+7tyjntdo8Mktx8O2
hI+RsG7H4pNSOsRZ6nWS2ATG3NSdsq/sJ9CpcWqzIoHAsCkUHD9o8hTCseMk
URIvw0rP+y7V8jlgD3OlAg7wMJq3rzkjRcsHM/XapMCCZXSQccKqrbUQiAr6
dYmf/qFoileagXkJkAz9fz7VXEQRh19Z7hsuBaExr1u+TgsoK/mX755dr8Gy
eIukQcEfVCfNXX5TVQ113l8CkwlzaMZU8n1dDYL1lU4GuVq/kQ8Pygl1rIcS
BRpfxa0Z5HbcTY1EbILdO5J23iycRrMpbgNM41aoUtY+UNLyHa2KTEld6mTC
myP1GnY+E0i6Vev5No9OuPFf3ZDv21HE0OKmKTZ2wYCEQfodjyG0r4H2/XhN
D/wIPqVBCuCiNdL6QRe7+sBIZLUn2HORVyDRwprTB4+yX2e6GnLRpPFno32f
+8DwnZR4IT8XMTzsQxam+yBu68CsccIgaihy2WEn0g8qdU7Vl/I+oouspeCw
Y/3gusrLrG7gAzLNHJtRb+0H7EGIg8cBNrLhfaAnX8gCY4HTe0MV2GiV7gu1
lDIWvAjduy5RmI0kPmjnEmtYEOY1har7WKiMkCze18oCWRMnufVeLJTTlDG5
/wsLvP4YT5Ql9qMCH/utKhvYsOgoHMA33IuEpxYSzXzZ4No7dlyyrRcV/B0Y
kw5iQ4d5o7Lqy16U4GDZPxnOBrpO6AfbgF7k4Tx+PjiWDSaiPwzz1vQixazB
K3ZP2BDX2E08sbcHGaV2kfg72bB5JyUpI6oL9aoSTkzLcSBJL1H2smcXSvg2
zApQ5oCQeUwxWHQhoZSopQU1DvzxCOr8JNqF5NwnCaO6HOjOOSMsR3uPxEa1
BF0tOSBiqr3K0r0TSVv7lU8HcGDZRUF+elcnUlUc0VsJ5cBk5EajhJkOJJ7u
xiHe4kAzYy60J7QD3VuTa7IYx4GQ/RWzpx6+Q2mV/83doXNgTGvfiFMdE52/
m7Yo3syBXislPkI0E8UyW/zp7Ryovyq5PcuCieoFqx7Id3IgvXDeYYTVjiJS
794SZ3PAamdlr+dUG5KnpaTFjnOgVlav8Zp0K4pd8856UAiDR6L7s277NSIS
U3Fo0AyDl79v8RKhEXU3+SVuMsegmcU8d2d1I8r0tNU/dBSDPzT7zVHUBrQT
E3RPsMbATiU4ObquHjWpqD2tP4eBlHFVdMzaOqTxU4Wd7o+BpgJhVIjFQG84
svzWgRiYC5qbxNIZ6LPUoyGeEAyCOjk8cVoMNBc8+8I4AoOyiplfpFe1yHvR
9p9rLAb7xq+wZY5Uoy1u98zFMzDwKORJ3j5Yhab6Q8eM6Bik+T04IXu1CnF3
ey95PsHgL29Ru1xKJfI/CtEZORhUk37UKAxVILvO0ir6Swy+fQoLVPSvQOt5
JFtiizDY/GydtpJgBRo+ztTyKcEgREutUFm9HEl9q5GVKsfA0OJS5q7gUvRH
qktQ4A0GPmJLjqrrStHLRmfmi1oMMthxJLXMV8iI0cg6zMBgxfVFknpLCeKM
6bR4NmDACJ28oylejN7xKCNyGwbTxsFGWjlFKDPlYDK9HYPtQsIrWrpFSHFl
PusPEwM+VZtpr9qXqChy6nxsBwZRZ3t6r9jmIycq3+7DPRiEDgXvqbqZh7Ja
XOUdezHw9ZB/yJefi4489krz6MPA5Zqf9aOVZ2gi7yDBjYXBmT9bXnGVn6GG
dPVfp9gYWIU0iymfzEGh6OO5AxwMyFGbuqufZyOlnTrP/mIY6AgzdhN7spDq
km14+wcM1B54JBxbeoKKSQodCQN4vSiVxz+fyEStMqbMVYMYiG87X6QSQkc8
I5dulOKWOCQh89XiMVJ59Sf5NBeDGfuKjLVzVKRP81KI+YTBpwurz9LNKYh4
JuGRxGcMOi6f3qL1OBXZeDz0S8VdE5g30PTrEfJRK6kX+4JB/q1Fqt2hZBRb
uTf0Nm7KfQv7yfQkZMPwz/6O+24KjRT2MwH9y+boHBvCwD9ziiNi9gBZ3ejU
zsHdZhuueXDvfUSd66PP4s7x2l7sPXgPHU664bd/GIPIsAb1xOgoFHrlSGkQ
7nOJF15WaNxC7hdmHYpw37BYf6bqVTgKWt5x+SNuDV/rU8RVgehGGGWCdwSD
CWrKyeN215AFd3PnFtxm0RVZ2jbuqL771ubduK8UhO9P+2WNxBpKuvVxv+io
1Z1cow/6PWk/DXC7xBR6C7xxAm3u3kAd3NN6iteuSvrA2pAHnkq4kV9n9fdK
P8A/MfUiuFcdi6194h4Cz+zGbk/j51FIyvqUHxMBuY7aRS24zcN5z0d9vg0L
IeMmj3BfunhuyGnfXXg4dNjYAfeDU29c9f+LBTPfgnwp3KXG0qMSo/EQ2+wf
1oHX51tKjVbA1gTQ2yFRE4R76f5F35G2RJC5z39hK+51t0llVn4PwSn/XWAl
Xn+ZoLZZJPMI6B+Ii0dwm7gp3qDcSIMcAzvTU/h92jr0VwjIUWFz6MD69/j9
u1vdmfftSAe9kazDZNymj3/WPBOjg/05+3UCeF6OkQ47nv1Kh7MpJKojnifb
ZPrShtpMWDaopuR/xPs/1tIw0jML0iva5lTxPF5d9WxwH2RDoMdFm/N4XoMi
lsN+bHgKDvttd8bjeY67UYAcGDlQxLNw4C2e/0IX4QM6m/Lg6Fg7fMH7x3xj
lIbISh4IZgYLVeP9NdrKIzM+mg/2F4xZ97rxvKvNLVPKC8BK2idc8D3+/0Ku
nF3JK4LpuoOHEvD+TexT7Z/cWgyKfy2dSXh/c9Umj7ITi4GntD8+rQU/z+cL
BsVBJfApsW93UCMGxWb2m13MS0GVGzbciM+T5ceSDy1rS8E4ceL7cjUGFgt9
wvs1y0CG4CurXoXB1/zjixtI5XC78KLUNXwebRU1w5rHK8Bu6hQlEp9nsR80
UlXuVcPHEs78+3QM2Hum1m9aqgYBd+Njlyl4PuLzo/mu1gBJwmY1fyoG9WSF
GwN2b4CzhbdaJAmD+afStvFKCJwLWQkVd/F5vY9PaMGlDhiRJTOG1zDgDH82
/UGrAwp2Kcv0MgY3ExgRI6w6iHAmEIy9MXg3EbrQdaQeTLG1H7e74fdDm/+a
p9UAJ7fppF85jcFjwlSLA18TVDrkLdga4vWc9G24rtsEAXuxOQF9DFJ7Fmtj
LjeB91ZZ2WIdPJ/ZguWvPzSBxi/Ljd808PeZ7cjeUNoMNd75y/xyGDjFONx8
69oK5Wer9VuIGMiKMfftb2ZCfJxYRUkTBzL+nthj/Y8J6TWMe9frOEAaYqt7
ab6FAaaMjuobDoiVjiqkZryFPc7vdWNLOcBnS5D47f8O3iVQomeecGA4Tfdn
vmInpPyzzLoexoEekd7e+yZdsBQpeshbgwP834LTPzp3QZEo/e+oCgf2tMi5
qoZ3wXLcUd0zOzjwMPT6r7eVXcCz/DpUhcQB2wkxsTXq3bDc7rLpOh8H2A0n
LGOkeuDRkJH5i142DPp3tkVN9cJGlY6RpatsGB9orw1PZYPFkHaIEoUFq9Iy
75mVseGvCDNCPYkF8jYBJ9d2s0E5kpGyO44FTu92TFCEOaA1/0BKMYwF/W9u
SpTj57au0PRnO7OgPkPb+5srBlnfKY8dlFhAcXoidXr3AET0jfDtLOmHI8OB
vprtXHgmuU1psKoPdmml/rcMQ/BFcTawpacHgq1ubr80NArjlY2x3PIu2Kb+
rWDs0ATkdGPzuQmd4Km8h25E+w7tx97aLi0yYfnmbXdx2jQMcVp7At1aYYap
ERJrMQPiLV/Cvzg3gXCUnPohmd+Q5RhvoRtUDx1b7bhCfbMQKXA9xFqKARea
g+oNIv4Ar9puZc2tNSDzcci47MQCyH51EZ0/9BqiuuPrNfkWofyuvlyfVhmI
6Nzk/mb/A5Lq1nFtmxLwyTunrpizDMq+ZV3dWCHoh5Fr1VV4yMUvrMMSVvKh
6+xvLR9xXvKGhYm3r92fQ43a4efq33nJdWP6/b13noLoKgnt3HoCuYBusWeb
eBbMb+AXN83jI4tscZC+30KHPeIPp1wi+cm9p5bWp2I0GFba+Fspip/s7pbI
VWfSINkwdeH7PX5yu4amfFc1DeY80/kDEvjJaplPZtRpNKhgZJPi6PzkqGeM
H45ONNDzKTMrreUnfzOY6PP7mg7ktv4M/kV+crSaZ6rnChWmB+2y25b5yfEf
/nbK/aRC5m8sN55AJBdVtZaNfqECQYZbKilEJCfZu/tGNVOhwX+sfZcUkXws
pUFSNZ4KZvLzcyd1iOQo/aBh0W1UmNMN+ielTyTb7Wo+cFKUCjmW/3i5hkRy
5ZZr0xl8VBAI5lnraUYk13ab7Dz6Fd/nulbLhdoQyRG62oFrSigQMBajZHQa
N7G54UE2BZSX1qgJOBLJpj59mltS8H1QSVQ3wZVI1m2w9DgWQgE9wyRDWw8i
uUzwldwvHwpMWEuYSHsTyWxq1PfHzhSgeKYc/nSZSK6mHWecPEmB/9svyf+/
X/4Py0pTVg==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
//Pl/wB4nUep
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{-2.4814677550600117`, -0.5406642031773764, 0.5406642031773764, 
   2.4814677550600117`}, {-2.4814677550600117`, -0.5406642031773764, 
   0.5406642031773764, 2.4814677550600117`}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.681467755060012, 2.681467755060012}, {0., 
   0.42024565289919324`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.807450107816661*^9, 3.807450151688466*^9}, 
   3.807450234323058*^9, 3.807450280956608*^9, {3.807450316389776*^9, 
   3.807450367740184*^9}, {3.807450398172957*^9, 3.807450408389529*^9}, {
   3.807450670220667*^9, 3.8074507370912313`*^9}, {3.807450888039207*^9, 
   3.807450933138418*^9}, {3.807450993223157*^9, 3.8074510228564377`*^9}, {
   3.807451106788621*^9, 3.807451120973078*^9}, {3.8074516676141376`*^9, 
   3.807451691957286*^9}, {3.807451726294491*^9, 3.807451758610443*^9}, {
   3.807451811260674*^9, 3.807451872661121*^9}, {3.807451903291706*^9, 
   3.807451913658021*^9}, 3.807452053841406*^9, {3.807452084563612*^9, 
   3.8074521092464113`*^9}, {3.8074521430254297`*^9, 3.807452173464899*^9}, 
   3.807453093195869*^9, {3.807453841627644*^9, 3.8074538806176777`*^9}, 
   3.8074546661961718`*^9, 3.807454973880992*^9, 3.807455025521104*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"vals", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Sigma]", "\[Rule]", 
     RowBox[{"10", " ", 
      SqrtBox["2"]}]}], ",", 
    RowBox[{"s", "\[Rule]", "4"}], ",", 
    RowBox[{"delt", "\[Rule]", 
     RowBox[{
      SqrtBox["3"], "/", "10"}]}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"gridlines", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"zerosvalues", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "/.", "vals"}], "//", 
   "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"toPlot", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{
       RowBox[{"pst", "[", 
        RowBox[{"x", ",", " ", "s", ",", 
         StyleBox["\[Sigma]", "TR"]}], 
        StyleBox[" ", "TR"], "]"}], "/", 
       RowBox[{"pstdelta1", "[", 
        RowBox[{"x", ",", "s", ",", "\[Sigma]", ",", "delt"}], "]"}]}]}], " ",
      "}"}], "/.", "vals"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"toPlot", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"gridlines", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "-", "0.2"}], ",", 
     RowBox[{
      RowBox[{"gridlines", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "+", "0.2"}]}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", "gridlines", " ", "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"toPlot", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"pst", "[", 
       RowBox[{"x", ",", " ", "s", ",", 
        StyleBox["\[Sigma]", "TR"]}], 
       StyleBox[" ", "TR"], "]"}], ",", 
      RowBox[{"pstdelta1", "[", 
       RowBox[{"x", ",", "s", ",", "\[Sigma]", ",", "delt"}], "]"}]}], " ", 
     "}"}], "/.", "vals"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"toPlot", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"gridlines", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "-", "0.2"}], ",", 
     RowBox[{
      RowBox[{"gridlines", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "+", "0.2"}]}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", "gridlines", " ", "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.807452893900194*^9, 3.807452896058078*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Sigma]", "\[Rule]", 
    RowBox[{"10", " ", 
     SqrtBox["2"]}]}], ",", 
   RowBox[{"s", "\[Rule]", "4"}], ",", 
   RowBox[{"delt", "\[Rule]", 
    FractionBox[
     SqrtBox["3"], "10"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8074528842663803`*^9, 3.807452899450437*^9}, 
   3.807453102089903*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "12.477488278073551`"}], ",", 
   RowBox[{"-", "2.46780551265997`"}], ",", "2.46780551265997`", ",", 
   "12.477488278073551`"}], "}"}]], "Output",
 CellChangeTimes->{{3.8074528842663803`*^9, 3.807452899450437*^9}, 
   3.8074531020993567`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQHbLs35r7UZoHGMDgg/3K87Mqy29rwPn/fpi58ccg
+JKezg/Ou6vD+fptO97dc1WD8/du5ff+66EK5+95ZLVijZkKnL/tz7nKVWbK
cL6iiLmPpaISnM8s15hzXUARzn8gYsJ4REgBzo8RKtNt/icL57+/Euoo/Uca
zi+s+fnhIrMUnH9VznXRqgfiCPfOTrJReCQK52cJadzYvkMYzp+at5E/b6Yg
nJ/jKZnQZMuPMH+1/JKcT1xwfuLBkzsnfGCD80XPHr70YwYTnO/v2u1ms/rP
fhjfL+Ja169tX+D8pWubVjfqvYDzD345x/9a/QJC3jXoW9u1c/YwvtqxC181
rr2A82eK7i9+kvEFwb/zNVVH6C+c/66970vNSSYHGH9Rbt2TlQfY4PzJsXIX
J/Fyw/kzZkq9cRTkh/Pvtx5/HtkgCOcLHLl5/cMiYTjfW0Pq/qsFonD+0omb
nhw6KQ7ncyhWMv47Kwnn15yubpI6IQ3n81VfYxR9KwvnrwqIn1H0Vh7O3yS6
QCycRxHhvgl6k5/KKMH5TXIhs1WlleH8P+uWLrqipwLnVwf1mZoaqCLUM0+t
atNRg/Mlth/f52anDudvrp3Yt8NWA85nEToh63MGwYfmFzgfAOlNBMc=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
fxV0TbIydFRC/+/P/g9NXhe9
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9999922228611947},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{-12.477488278073551`, -2.46780551265997, 2.46780551265997, 
   12.477488278073551`}, {-12.477488278073551`, -2.46780551265997, 
   2.46780551265997, 12.477488278073551`}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-12.67748827807355, 12.67748827807355}, {0.9999922228611947, 
   1.000009117682299}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8074528842663803`*^9, 3.807452899450437*^9}, 
   3.807453102361668*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJw113k0Ve8aB/BQEaIMiUIUzimEHypDzzY0ECpJ9CtFlxBKyTHLyRBuJMoU
P1Myp8PZxnq3ecycsSIZotLBUYp0913r3j/22uuz9lp77ed9n++z1ytjd93c
nnPdunUj5PXfu0X2WsHoeSrhmNb9syKBBqlhV65NWFKJgl4t36sZNJhxbKbO
mFOJ30IbWeIFNAjY9zB7wZhK3Hr/AN1HNMgtlkvboE0lkEeY0YspGqxVmsTu
20Eldqh+fDar4QW5nUnetBEKUTe9a0570AvWljWPCl6gEFa7Am14lXxA3Mhg
rPOYAiFtd57vmK0/7A8tn3t/RJ447nso9YvjHXjJFDzx+7gcYXBhyDzyHB2q
x7VyCjT3ELHxvd2NtcGAr3Z452nuJuze34lquBQGMiIHTA7JyBL9T3v+jOdG
AJdUkMvAFhlCaaUtX/tGFIyJqHPUC+0ihq//9WG9YQxcEPJUursmSZhyPRTx
HIqFb31n9Xas7iCG06ta3HIeg7vfT1Y3lwSRK/dst05/IryROpKRNyZG2CRF
32X3pMD+ZDudXeOixK5JZRPxzengLEQZLCsXJizUk/doMzLhkdsLQbfErUTa
3uvfddKzwcVI/DJdV5Aguvuzzmbngnu+dJbLAi8Ra5huWqtUCLY1LRUPWBuJ
Jbxzs5dZMYi+rutZTuAkToZl6QdRGHDySORRnfxVVGUuvCthqASS3J/AtchV
xPmBtz9gtASmUgoPJl1bRauBz3ttJ0sg4Hvn3uV9q2jcLiRs53wJFD0TESwt
WEFqZ5dWrvCUggBv6sC+ol9owwivi7pmKXR0FDvueLGM3p8VksyOKgWJlRpb
45hlFEZt5uaOKwUHhd7z3u7LyL/3z9EriaWwFrhkMqC6jB6+G83anFUKyqpa
qrGMH6hyzYSfWlEKUbF1P3lLvyMXeQsOj/FSMLPqj/iFs1GZn+97eVUmHF/P
meUbx0azK+UfjDSZoF+s9HLVnY1O97aZO2gzQZMn5NuaIhs10q3ORx5hglT5
XxZcmYtINHOCK8SaCd/EYiT5oxdQaPirP8p3mDBbV61532UBOZR5l04EM2Hi
+qeTAsYLqPzAJuPYcCYMNgF9y4YFlBl8d2n4IRMI2tyUiO88ovD/uCz8lAkP
Bk4US15loW3NmXoyzUyIuEtrSTVkoY+3VMVs25kQvD9zXFqWhV57OhgldjGB
JbBENaz8htzrdmctDDKhxs180SR7DtVEzJ47PsMEO+XNoTYBX9CVnpyN3jw4
PC2k5wcpf0K+roPe1RgOgxjbR2xuGhl5DVXUGuDA22dvXFg4jSJqI8JrjuJw
49fxmUHFaSToS6/LMcFB55iggsq+KeR4e1xE0gqHvrHkjPcKE0j9gv2XBFcc
uD023/SY/ojmFt8Nyt3AQYs7UI/32UcUHmDLk38ThzQluzEN+Y/I6fcG6VQa
Di4+FKn7e8ZRnPUsQz4IBy4RZqK2zBiayN859vIh+dzMtCejZhRNCe3mfR2H
Q4+HinsHNooEOOY1+x7jkFrzvUgO3iNT/5SI1iQcNP6+u7dP+y0qZBtUWGbg
kBTk0PKncgT1yaonyGXhsC7HyHGf1giyGydsvjzFoZ0tmE0/OIwoetKPbXNx
+FfUExlVjUHk07TBevY5Dq2lgcSF0gH00viBtNcLHFRG7C7d+2sA/W3Jgf9m
4LCiQE0ZVe1H+VLNx1hMHB7WMLdHKfeh/TmX8ZtVOCxPJ5RVFPaisuvqJa+q
cbAR8LOcVOxFT4YarnG+wmHv3/pxOvt60M9CaW53AocadofgZ4UupLHQmzdb
j0Mj5Wi+zplOdHbjPflvDThscpzTzLTsQPEjLmmfG3F4MHXY7MbFdnTReMO9
9mYceuWmh/ovt6FAJ++F4hYcttlH2+v+qxUt2f5jcb8Vh5SPo36815pRnK74
L6V2HMZk7/G4uzWh7b3JWguk99ipxA24N6LRF0quRa9xyBu7k5/lVY9W193O
FOjEYU6aeoDPrw7dWt+cxSCteqm71j2wFq3esY8168Kh/J3M8OFQAnmrW6i7
dePw41Bcm7EwQgs0xsQ86YDyiXExiZfowtnbAa49OKw/oPFrYlcVEjNqXPeB
dCQzZCtDoQK96X7rbNKLg5B6PyVQuQyV31qrek46gSGPmWgw0ZGqgEXePhyk
VWnnxHVK0BYMbbEhnf28yW1K/wWCZ/uFc0mfv6DCfzW2CLU8Nf31mbSjdbcW
R3oeonM+bZB/g4On5U2n5KJsNBPf6WFN+u4Z4QSN6gzUdvY2dzBp2XTH+//E
pqB0fRP/bNK6yXmzvUWPUInf9n6C9Iu9Q9Fb4iKRgHbB1l7SXbqVcQtxNHS4
Y3r/O9L8V38Mflu+BM1pFSqjpPOXkzBm813wOCAlMkRai85nIN8SAxdVdw23
kpa+1zI5X5gI1ccG6aWkOZsM6m1a0iDG1FXgMWl2S8aj+qos4Ngv4n+d9FQ7
x9W9RTkQwhLsxEgPdV4++CCtAAYKX6znJe0wM7re16gYnidYSbWR9Y86R38t
1GeA8Q/3ncGkrb4c7h/TLoVCWe8/6qS7XedeCWvgUBb8o+kdud7G31KeHVUu
h5VHwZ4BpOtvmD7wVqiEyyMNfGKk8VsFtqPir4DbUO/rfnL/En4pyYVvIuDY
Y37tYnK/LapCEmU31oCtR9FNCukOHQ362T+1kLxXLXMd2S8Rv//9fW6lDhrE
RVMvk/107NWE873leuiq7Aot78CBgLgzVfON8DjKVf4U2Y9+6740Wcw1wU9A
o9Fkvx6qMdCZm22G2setkU1tODD0F/fITLSCyvOwGimy358eMf8e2t8BnIKL
7S5kXlg8/U7RnzrhTKiZrCWZJ6mpgrkT/l0gSb/Fr0nmzTlXxc4iuhsMtp3J
Gaoh11/loJF9SS+A7zaDYjK/OVt/0Z10+uCrzDTdjMy32WJVtWtDH5TGjVz7
WEHOG3JEeA68gb7TyHAeJ/Ohe0wsbGUAisocrqYU49Avtel0ZPAghIk2G84X
/beetojozUNg1W40oV2IQ3Od2Vq89DD0ZofSmOQ8umxsOZlj8BZEUl+d0SLn
WXM+w3ryyBhQViiGUTE4JD+J9bwaMQYdQfXcp6JxcLvvETvTMQZVWtPtPPdx
ELmu+frruQ9whPeX66V75PvUKrHvTuOwNS8sKj2AzGd5jQJ31AQcs92U6O9E
zrvcDMPwngmYYbErXjjg8CTpri2f2CTs5KpWfHcFB32/I8mCaZOwLCMjJWGD
QxS0CGxnTEFCZFCnojkO8o1dS5T+TzAaVhZfeRCHSt/422LbZqBHQhL9Q/aV
marN0gbLGVi4dSPPXw0H2pPP7PE3MyC7+PXDbkWyvpsb2U/ezELK3LSThDQO
TtI6C1vefAHzebWCUi4cLKvP0FadWGBoftKhsYkJu8QOlC2GsyDottFyRx35
/3WX+DGby4IdEas83YgJAQofPIdmWLC+SIWoKWPCs4dunrjTPPCGLmlZPmPC
smP47RtOC6BaZbv7dAgTEkXRrQlHNhiIF6i90mECkxUWGx7JBv2Srb0pB5jQ
3XaqRLmIDUuXz3V5qjFhE318wWuRDQ+tNTeKUpjgPbfh5uaAJTibm2TLJcwE
6yaTG5qx32E858Pv59OlIO497HLv5TLoLoyKR/67FBLfLtkrCv0GF+87J642
lsBcWBTbr4UTW34s6qEnwoAM14CJXGIjphNnFSBzpRhiL0p1P9zMh+ka6ln1
bCuEhESJL3pbBbHYQ38R4S25MBrSNG19ZysWGayT9LkhG7bUDw2wMoSxa54d
8YyOTDhBkRidTRPF9Jbo142t0uFpDGOitkUMM/9imsXHkQo8Mt4ca6/FMYfG
rxRe9STwa/OlSzTvwOJQwxmZH49BwLefQ/SrJPb2QQ/nblYs5J26lHDzqzRm
P0rE5dJjgCGatu0cvwxmy+LqDwyKgoQHyrGTO2WxCL4W5+3lEUCXskiW27Eb
k7GubI0oDIPVoqcZfcp7sFb0OXDiTTD4mkdpaKjIYVHX34+gSDrQuR75hCrK
Y/JL1jGh8Xdge1nTq6OHFTCv7BF+FOgPJf4xUeW6FIzDVKX6bpAPWKrx7VPS
p2AyNm41G2/7wPJUcFP6UQr2IYQmFOPoA4dPea2LPEnBdJ0PBVed9IFm2Us3
L9pSsP0izpJXpXzgbZOiJWcIBes8yZgReekN64WaJU3aKVi6KX917h8vyG7U
qyS6KBgfNXmRn+0FRr5VlhpvKFgvY+eY5ycviJooipZ6T8EYBhyNNt1e5Pc+
4pj/RsEeMY2PB2R6geKFK5OPhKnYtZNXjJaPe0HHlndBvNup2OnClap6XS9w
b7CUCtxJxWpH5VLi1bwAVzY+5yhHxbzTuJNO7fQCjEO1ResAFVO0jd8oyKLB
ODPP/rk2FdvKC54CkzQIcd7DuQejYh5x3moiwzRo7RXT3mxExb42jQeq1dPA
5V7MQJApFVsZxnlOVNBAUJfP4/tpKtaf6vjaqYgGjPngLdcsqRjbuaclKpMG
/zufYf8/n/0Hk3bt2Q==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
fob9/372H0Hg+Hg=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{-12.477488278073551`, -2.46780551265997, 2.46780551265997, 
   12.477488278073551`}, {-12.477488278073551`, -2.46780551265997, 
   2.46780551265997, 12.477488278073551`}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-12.67748827807355, 12.67748827807355}, {0., 
   0.08920130005776841}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8074528842663803`*^9, 3.807452899450437*^9}, 
   3.807453102534034*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[Sigma]", "2"]}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["\[Sigma]", "2"]}]], "\[Equal]", "3"}], ",", " ", 
   "\[Sigma]"}], "]"}]], "Input",
 CellChangeTimes->{{3.807451056625457*^9, 3.807451076338408*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Sigma]", "\[Rule]", 
     RowBox[{"-", 
      SqrtBox["3"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Sigma]", "\[Rule]", 
     SqrtBox["3"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.807451077000298*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"pst", "[", 
     RowBox[{"x", ",", " ", "s", ",", 
      RowBox[{
       StyleBox["\[Sigma]", "TR"], "+", "delt"}]}], "]"}], "+", 
    RowBox[{"1000", 
     RowBox[{"pst", "[", 
      RowBox[{"x", ",", " ", "s", ",", 
       RowBox[{
        StyleBox["\[Sigma]", "TR"], "-", "delt"}]}], 
      StyleBox[" ", "TR"], "]"}]}]}], ")"}], "/", "2", "  "}]], "Input",
 CellChangeTimes->{{3.807451173011647*^9, 3.8074512104935837`*^9}, 
   3.8074513527735643`*^9, {3.807451383404509*^9, 3.8074514265398397`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["2", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{"2", " ", 
             SuperscriptBox["\[Sigma]", "2"]}], 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["s", "2"]}], "+", 
             SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}]}]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         SuperscriptBox["\[Sigma]", "2"], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["s", "2"]}], "+", 
            SuperscriptBox["\[Sigma]", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             SuperscriptBox["x", "2"], 
             SuperscriptBox["s", "2"]], "+", 
            FractionBox[
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}], 
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["s", "2"]}], "+", 
              SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}]}]], ")"}], 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"2", " ", 
            SuperscriptBox["\[Sigma]", "2"]}], 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["s", "2"]}], "+", 
            SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}]}]]}], 
     RowBox[{"s", " ", 
      SqrtBox[
       FractionBox[
        SuperscriptBox["\[Sigma]", "2"], 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["s", "2"]}], "+", 
         SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
      RowBox[{"Beta", "[", 
       RowBox[{
        FractionBox[
         SuperscriptBox["\[Sigma]", "2"], 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["s", "2"]}], "+", 
          SuperscriptBox["\[Sigma]", "2"]}]], ",", 
        FractionBox["1", "2"]}], "]"}]}]], "+", 
    FractionBox[
     RowBox[{"125", " ", 
      SuperscriptBox["2", 
       RowBox[{
        FractionBox["5", "2"], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{"2", " ", 
             SuperscriptBox["\[Sigma]", "2"]}], 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["s", "2"]}], "+", 
             SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}]}]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         SuperscriptBox["\[Sigma]", "2"], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["s", "2"]}], "+", 
            SuperscriptBox["\[Sigma]", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             SuperscriptBox["x", "2"], 
             SuperscriptBox["s", "2"]], "+", 
            FractionBox[
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}], 
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["s", "2"]}], "+", 
              SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}]}]], ")"}], 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"2", " ", 
            SuperscriptBox["\[Sigma]", "2"]}], 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["s", "2"]}], "+", 
            SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}]}]]}], 
     RowBox[{"s", " ", 
      SqrtBox[
       FractionBox[
        SuperscriptBox["\[Sigma]", "2"], 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["s", "2"]}], "+", 
         SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
      RowBox[{"Beta", "[", 
       RowBox[{
        FractionBox[
         SuperscriptBox["\[Sigma]", "2"], 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["s", "2"]}], "+", 
          SuperscriptBox["\[Sigma]", "2"]}]], ",", 
        FractionBox["1", "2"]}], "]"}]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.807451162507972*^9, 3.807451211072607*^9}, {
  3.807451338789568*^9, 3.807451353364153*^9}, {3.8074513839967747`*^9, 
  3.807451427106748*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]", "\[Rule]", 
    FractionBox[
     RowBox[{"s", " ", 
      SqrtBox["\[Alpha]"]}], 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "2"}], "+", "\[Alpha]"}]]]}], "/.", 
   RowBox[{"\[Alpha]", "->", "4"}]}], "/.", 
  RowBox[{"s", "\[Rule]", "10"}]}]], "Input",
 CellChangeTimes->{{3.80745281885183*^9, 3.807452857211688*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Sigma]", "\[Rule]", 
  RowBox[{"10", " ", 
   SqrtBox["2"]}]}]], "Input",
 CellChangeTimes->{{3.80745285999288*^9, 3.807452859998294*^9}}],

Cell[BoxData[
 RowBox[{"\[Sigma]", "\[Rule]", 
  RowBox[{"10", " ", 
   SqrtBox["2"]}]}]], "Output",
 CellChangeTimes->{3.807452860412848*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Student T Distribuion with scale s and tail exponent \[Alpha]", \
"Section",
 CellChangeTimes->{{3.80736655040198*^9, 3.8073666122341347`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"st", "[", 
   RowBox[{"x_", ",", " ", "\[Alpha]_", ",", 
    StyleBox[" ",
     FontSize->10], "s_"}], "]"}], ":=", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      StyleBox["\[Alpha]",
       FontSize->10], 
      RowBox[{"\[Alpha]", "+", " ", 
       FractionBox[
        SuperscriptBox["x", "2"], 
        SuperscriptBox["s", "2"]]}]], ")"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Alpha]", "+", "1"}], ")"}], "/", "2"}]], 
   RowBox[{
    RowBox[{"Sqrt", "[", "\[Alpha]", "]"}], "s", " ", 
    RowBox[{"Beta", "[", 
     RowBox[{
      RowBox[{"\[Alpha]", "/", "2"}], ",", 
      RowBox[{"1", "/", "2"}]}], "]"}]}]]}]], "Input",
 CellChangeTimes->{{3.806330012050956*^9, 3.806330037987977*^9}, {
  3.8063300838864727`*^9, 3.806330253165084*^9}, {3.806330353739607*^9, 
  3.806330357551526*^9}, {3.807445911142139*^9, 3.807445912390086*^9}, {
  3.807446037356814*^9, 3.807446049830303*^9}, {3.807449534023069*^9, 
  3.807449534294794*^9}, {3.807462189357614*^9, 3.807462192476915*^9}}],

Cell["Let us re-express this expression in terns of its variance:", "Text",
 CellChangeTimes->{{3.807445923756748*^9, 3.807445946467451*^9}, 
   3.807445988413198*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"st", "[", 
     RowBox[{"x", ",", "\[Alpha]", ",", "s"}], "]"}], "1"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", ">", "2"}], "&&", " ", 
      RowBox[{"s", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.807446382166217*^9, 3.807446382275941*^9}, {
   3.8074464566845303`*^9, 3.80744645675696*^9}, 3.8074467938554487`*^9, 
   3.807449549370042*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.80744599595389*^9, 3.80744638929119*^9, 
  3.8074467982783127`*^9, 3.807449555779901*^9, 3.8074531352943296`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"st", "[", 
     RowBox[{"x", ",", "\[Alpha]", ",", "s"}], "]"}], "x"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", ">", "2"}], "&&", " ", 
      RowBox[{"s", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.807446383836343*^9, 3.807446385460154*^9}, {
   3.807446460244143*^9, 3.807446460300152*^9}, 3.807446795672207*^9, 
   3.807449552321011*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.806330716948785*^9, 3.807446394948965*^9, 
  3.807446460861812*^9, 3.807446798441457*^9, 3.807449555939178*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"zeros", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "->", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"s", 
          SqrtBox[
           RowBox[{
            FractionBox[
             RowBox[{" ", 
              RowBox[{
               RowBox[{"5", "\[Alpha]"}], "+", 
               SqrtBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"\[Alpha]", "+", "1"}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"17", " ", "\[Alpha]"}], "+", "1"}], ")"}]}]], "+",
                "1"}]}], 
             RowBox[{"\[Alpha]", "-", "1"}]], " "}]]}], 
         SqrtBox["2"]]}]}], ",", 
      RowBox[{"x", "->", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"s", 
          SqrtBox[
           RowBox[{
            FractionBox[
             RowBox[{" ", 
              RowBox[{
               RowBox[{"5", "\[Alpha]"}], "-", 
               SqrtBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"\[Alpha]", "+", "1"}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"17", " ", "\[Alpha]"}], "+", "1"}], ")"}]}]], "+",
                "1"}]}], 
             RowBox[{"\[Alpha]", "-", "1"}]], " "}]]}], 
         SqrtBox["2"]]}]}], ",", 
      RowBox[{"x", "->", 
       FractionBox[
        RowBox[{"s", 
         SqrtBox[
          RowBox[{
           FractionBox[
            RowBox[{" ", 
             RowBox[{
              RowBox[{"5", "\[Alpha]"}], "-", 
              SqrtBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"\[Alpha]", "+", "1"}], ")"}], 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"17", " ", "\[Alpha]"}], "+", "1"}], ")"}]}]], "+", 
              "1"}]}], 
            RowBox[{"\[Alpha]", "-", "1"}]], " "}]]}], 
        SqrtBox["2"]]}], ",", 
      RowBox[{"x", "->", 
       FractionBox[
        RowBox[{"s", 
         SqrtBox[
          RowBox[{
           FractionBox[
            RowBox[{" ", 
             RowBox[{
              RowBox[{"5", "\[Alpha]"}], "+", 
              SqrtBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"\[Alpha]", "+", "1"}], ")"}], 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"17", " ", "\[Alpha]"}], "+", "1"}], ")"}]}]], "+", 
              "1"}]}], 
            RowBox[{"\[Alpha]", "-", "1"}]], " "}]]}], 
        SqrtBox["2"]]}]}], "}"}]}], " ", ";"}],
  FontSize->14], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"zerovalues", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"s", 
        SqrtBox[
         RowBox[{
          FractionBox[
           RowBox[{" ", 
            RowBox[{
             RowBox[{"5", "\[Alpha]"}], "+", 
             SqrtBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"\[Alpha]", "+", "1"}], ")"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"17", " ", "\[Alpha]"}], "+", "1"}], ")"}]}]], "+", 
             "1"}]}], 
           RowBox[{"\[Alpha]", "-", "1"}]], " "}]]}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"s", 
        SqrtBox[
         RowBox[{
          FractionBox[
           RowBox[{" ", 
            RowBox[{
             RowBox[{"5", "\[Alpha]"}], "-", 
             SqrtBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"\[Alpha]", "+", "1"}], ")"}], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"17", " ", "\[Alpha]"}], "+", "1"}], ")"}]}]], "+", 
             "1"}]}], 
           RowBox[{"\[Alpha]", "-", "1"}]], " "}]]}], 
       SqrtBox["2"]]}], ",", 
     FractionBox[
      RowBox[{"s", 
       SqrtBox[
        RowBox[{
         FractionBox[
          RowBox[{" ", 
           RowBox[{
            RowBox[{"5", "\[Alpha]"}], "-", 
            SqrtBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", "1"}], ")"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"17", " ", "\[Alpha]"}], "+", "1"}], ")"}]}]], "+", 
            "1"}]}], 
          RowBox[{"\[Alpha]", "-", "1"}]], " "}]]}], 
      SqrtBox["2"]], ",", 
     FractionBox[
      RowBox[{"s", 
       SqrtBox[
        RowBox[{
         FractionBox[
          RowBox[{" ", 
           RowBox[{
            RowBox[{"5", "\[Alpha]"}], "+", 
            SqrtBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", "1"}], ")"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"17", " ", "\[Alpha]"}], "+", "1"}], ")"}]}]], "+", 
            "1"}]}], 
          RowBox[{"\[Alpha]", "-", "1"}]], " "}]]}], 
      SqrtBox["2"]]}], "}"}]}],
  FontSize->14]}], "Input",
 CellChangeTimes->{{3.80744670364744*^9, 3.807446756745019*^9}, {
   3.807447035551999*^9, 3.807447040959033*^9}, {3.8074470735283737`*^9, 
   3.807447082416092*^9}, {3.8074474413923187`*^9, 3.807447441894732*^9}, {
   3.8074475036730423`*^9, 3.80744754825881*^9}, {3.807447666282425*^9, 
   3.807447681137093*^9}, {3.8074479172680798`*^9, 3.8074479225539007`*^9}, {
   3.807450462162472*^9, 3.8074505711314163`*^9}, {3.807450638997178*^9, 
   3.807450659363594*^9}, {3.807453724482712*^9, 3.807453766217602*^9}, 
   3.807462079406783*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"s", " ", 
      SqrtBox[
       FractionBox[
        RowBox[{"1", "+", 
         RowBox[{"5", " ", "\[Alpha]"}], "+", 
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"17", " ", "\[Alpha]"}]}], ")"}]}]]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Alpha]"}]]]}], 
     SqrtBox["2"]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"s", " ", 
      SqrtBox[
       FractionBox[
        RowBox[{"1", "+", 
         RowBox[{"5", " ", "\[Alpha]"}], "-", 
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"17", " ", "\[Alpha]"}]}], ")"}]}]]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Alpha]"}]]]}], 
     SqrtBox["2"]]}], ",", 
   FractionBox[
    RowBox[{"s", " ", 
     SqrtBox[
      FractionBox[
       RowBox[{"1", "+", 
        RowBox[{"5", " ", "\[Alpha]"}], "-", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"17", " ", "\[Alpha]"}]}], ")"}]}]]}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}]]]}], 
    SqrtBox["2"]], ",", 
   FractionBox[
    RowBox[{"s", " ", 
     SqrtBox[
      FractionBox[
       RowBox[{"1", "+", 
        RowBox[{"5", " ", "\[Alpha]"}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"17", " ", "\[Alpha]"}]}], ")"}]}]]}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}]]]}], 
    SqrtBox["2"]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.807447923193*^9, {3.807449589736911*^9, 3.807449590840227*^9}, 
   3.8074506615748367`*^9, {3.807453730682477*^9, 3.807453767216474*^9}, 
   3.8074620812084*^9, {3.807462563440782*^9, 3.807462589073617*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SecondDerivarive", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"st", "[", 
           RowBox[{"x", " ", ",", "\[Alpha]", " ", ",", "s"}], "]"}], "/.", 
          "AlphaDefinition"}], ")"}], ",", " ", "\[Sigma]"}], "]"}], ",", " ",
       "\[Sigma]"}], "]"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SecondDerivarive", "=", 
   RowBox[{"SecondDerivarive", "/.", 
    RowBox[{"VarianceDefinition", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.807447101641507*^9, 3.807447270767057*^9}, {
   3.807447333304147*^9, 3.807447419807509*^9}, 3.80744959566578*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<=", "4"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"SecondDerivarive", "/.", " ", 
       RowBox[{"zeros", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Alpha]", "\[Rule]", "4"}], ",", " ", 
        RowBox[{"s", "\[Rule]", "10"}]}], "}"}]}], " ", "//", "N"}], "]"}]}], 
  " ", "]"}]], "Input",
 CellChangeTimes->{{3.807447429208405*^9, 3.8074474677135687`*^9}, {
  3.807447583146727*^9, 3.8074476208324633`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", "0.00005398155366951412`"}], "}"}]], "Print",
 CellChangeTimes->{
  3.8074474684651527`*^9, 3.8074475195253677`*^9, 3.807447559311988*^9, {
   3.8074476076020803`*^9, 3.8074476214547997`*^9}, 3.807449603806353*^9, 
   3.807450664706856*^9, 3.807462089839613*^9}],

Cell[BoxData[
 RowBox[{"{", "0.00009569581627790418`", "}"}]], "Print",
 CellChangeTimes->{
  3.8074474684651527`*^9, 3.8074475195253677`*^9, 3.807447559311988*^9, {
   3.8074476076020803`*^9, 3.8074476214547997`*^9}, 3.807449603806353*^9, 
   3.807450664706856*^9, 3.807462089846129*^9}],

Cell[BoxData[
 RowBox[{"{", "0.00009569581627790418`", "}"}]], "Print",
 CellChangeTimes->{
  3.8074474684651527`*^9, 3.8074475195253677`*^9, 3.807447559311988*^9, {
   3.8074476076020803`*^9, 3.8074476214547997`*^9}, 3.807449603806353*^9, 
   3.807450664706856*^9, 3.807462089852454*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", "0.00005398155366951412`"}], "}"}]], "Print",
 CellChangeTimes->{
  3.8074474684651527`*^9, 3.8074475195253677`*^9, 3.807447559311988*^9, {
   3.8074476076020803`*^9, 3.8074476214547997`*^9}, 3.807449603806353*^9, 
   3.807450664706856*^9, 3.8074620898588257`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<=", "4"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"SecondDerivarive", "/.", " ", 
       RowBox[{"zeros", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Alpha]", "\[Rule]", "3"}], ",", " ", 
        RowBox[{"s", "\[Rule]", "2.5"}]}], "}"}]}], " ", "//", "N"}], "]"}]}],
   " ", "]"}]], "Input",
 CellChangeTimes->{{3.807447629335908*^9, 3.807447633464419*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", "0.0010027848057491836`"}], "}"}]], "Print",
 CellChangeTimes->{3.807447633739608*^9, 3.807447721904557*^9, 
  3.8074496083369513`*^9, 3.807450667121954*^9, 3.807462091632744*^9}],

Cell[BoxData[
 RowBox[{"{", "0.0024951636130377125`", "}"}]], "Print",
 CellChangeTimes->{3.807447633739608*^9, 3.807447721904557*^9, 
  3.8074496083369513`*^9, 3.807450667121954*^9, 3.8074620916381893`*^9}],

Cell[BoxData[
 RowBox[{"{", "0.0024951636130377125`", "}"}]], "Print",
 CellChangeTimes->{3.807447633739608*^9, 3.807447721904557*^9, 
  3.8074496083369513`*^9, 3.807450667121954*^9, 3.8074620916445827`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", "0.0010027848057491836`"}], "}"}]], "Print",
 CellChangeTimes->{3.807447633739608*^9, 3.807447721904557*^9, 
  3.8074496083369513`*^9, 3.807450667121954*^9, 3.807462091650744*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.807453124140089*^9, 3.8074531254471407`*^9}, 
   3.807462147483789*^9}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"stdelta2", "[", 
      RowBox[{"x_", ",", "\[Alpha]_", ",", "s_", 
       StyleBox[" ", "TR"], ",", "delt_"}], "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"st", "[", 
         RowBox[{"x", ",", " ", "\[Alpha]", ",", 
          RowBox[{"s", 
           SqrtBox[
            RowBox[{"1", "+", "delt"}]]}]}], "]"}], "+", 
        RowBox[{"st", "[", 
         RowBox[{"x", ",", " ", "\[Alpha]", ",", 
          RowBox[{"s", 
           SqrtBox[
            RowBox[{"1", "-", "delt"}]]}]}], 
         StyleBox[" ", "TR"], "]"}]}], ")"}], "/", "2"}]}], " ", ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"stdelta1", "[", 
      RowBox[{"x_", ",", "\[Alpha]_", ",", "s_", 
       StyleBox[" ", "TR"], ",", "delt_"}], "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"st", "[", 
         RowBox[{"x", ",", " ", "\[Alpha]", ",", 
          RowBox[{"s", 
           StyleBox["+", "TR"], "delt"}]}], "]"}], "+", 
        RowBox[{"st", "[", 
         RowBox[{"x", ",", " ", "\[Alpha]", ",", 
          RowBox[{"s", "-", "delt"}]}], 
         StyleBox[" ", "TR"], "]"}]}], ")"}], "/", "2"}]}], " ", 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.807451451132234*^9, 3.807451466659778*^9}, {
   3.807451663245944*^9, 3.80745168255912*^9}, 3.807453082257785*^9, {
   3.807454605250093*^9, 3.807454643938773*^9}, {3.807462138133726*^9, 
   3.8074621797951736`*^9}, {3.8074622273505363`*^9, 
   3.8074622388287163`*^9}, {3.807462300387719*^9, 3.807462307775289*^9}}],

Cell[CellGroupData[{

Cell[BoxData["zerovalues"], "Input",
 CellChangeTimes->{
  3.807462552111122*^9, {3.8074625824714537`*^9, 3.807462594711046*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"s", " ", 
      SqrtBox[
       FractionBox[
        RowBox[{"1", "+", 
         RowBox[{"5", " ", "\[Alpha]"}], "+", 
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"17", " ", "\[Alpha]"}]}], ")"}]}]]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Alpha]"}]]]}], 
     SqrtBox["2"]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"s", " ", 
      SqrtBox[
       FractionBox[
        RowBox[{"1", "+", 
         RowBox[{"5", " ", "\[Alpha]"}], "-", 
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"17", " ", "\[Alpha]"}]}], ")"}]}]]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Alpha]"}]]]}], 
     SqrtBox["2"]]}], ",", 
   FractionBox[
    RowBox[{"s", " ", 
     SqrtBox[
      FractionBox[
       RowBox[{"1", "+", 
        RowBox[{"5", " ", "\[Alpha]"}], "-", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"17", " ", "\[Alpha]"}]}], ")"}]}]]}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}]]]}], 
    SqrtBox["2"]], ",", 
   FractionBox[
    RowBox[{"s", " ", 
     SqrtBox[
      FractionBox[
       RowBox[{"1", "+", 
        RowBox[{"5", " ", "\[Alpha]"}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"17", " ", "\[Alpha]"}]}], ")"}]}]]}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Alpha]"}]]]}], 
    SqrtBox["2"]]}], "}"}]], "Output",
 CellChangeTimes->{{3.807462544685853*^9, 3.80746259603616*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"vals", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Alpha]", "\[Rule]", "400"}], ",", 
    RowBox[{"s", "\[Rule]", "1000"}], ",", 
    RowBox[{"delt", "\[Rule]", "0.1"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"gridlines", "=", " ", 
  RowBox[{
   RowBox[{"zerovalues", "/.", "vals"}], "//", "N"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"toPlot", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{
       RowBox[{"pst", "[", 
        RowBox[{"x", ",", " ", "\[Alpha]", ",", "s"}], "]"}], "/", 
       RowBox[{"pstdelta1", "[", 
        RowBox[{"x", ",", "\[Alpha]", ",", "s", ",", "delt"}], "]"}]}]}], " ",
      "}"}], "/.", "vals"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"toPlot", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"gridlines", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "-", "100"}], ",", 
     RowBox[{
      RowBox[{"gridlines", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "+", "100"}]}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", "gridlines", " ", "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"toPlot", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"pst", "[", 
       RowBox[{"x", ",", " ", "\[Alpha]", ",", "s"}], "]"}], ",", 
      RowBox[{"pstdelta1", "[", 
       RowBox[{"x", ",", "\[Alpha]", ",", "s", ",", "delt"}], "]"}]}], " ", 
     "}"}], "/.", "vals"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"toPlot", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"gridlines", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "-", "100"}], ",", 
     RowBox[{
      RowBox[{"gridlines", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "+", "100"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", "gridlines", " ", "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQbSBblagU98Zx8se4JBCtcLm+AEQv8X/cAqJNNvZM
BNGTKjsWgOhNWv5LQHTmcYalIPrG+u3HQfT9P3/OgmiVuVPugfUbtT0D0QdT
uN6B6IIXhz+C6JZMjT8guqyH4x+IXvDew1UZSM97nQGm1/G2eIL5V3f7gmhh
GeYQED3BTiERRPuFmOSD6GkVk4tANMuLtDIQ3fJuUiWITtc4XAvmH57SCKKn
uKgGqwDpL6bPwkC00t2TO0D0MWeNnSB6zZ8190F0S+F6MF2gfvopiPYx5XsG
oif3PanSANI9XgU1ILrgjUwbiD5mzzYBRJ/5ZzcTRJcl1c8F0RZi7YtA9L5r
HUtB9LbjlqtANI9K/QEQrXek9DiIXv4j4haINnga8xhEXzj85j2IBgDx2cCc

  "]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Alpha]", "\[Rule]", "400"}], ",", 
   RowBox[{"s", "\[Rule]", "1000"}], ",", 
   RowBox[{"delt", "\[Rule]", "0.1`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.807450107816661*^9, 3.807450151688466*^9}, 
   3.807450234323058*^9, 3.807450280956608*^9, {3.807450316389776*^9, 
   3.807450367740184*^9}, {3.807450398172957*^9, 3.807450408389529*^9}, {
   3.807450670220667*^9, 3.8074507370912313`*^9}, {3.807450888039207*^9, 
   3.807450933138418*^9}, {3.807450993223157*^9, 3.8074510228564377`*^9}, {
   3.807451106788621*^9, 3.807451120973078*^9}, {3.8074516676141376`*^9, 
   3.807451691957286*^9}, {3.807451726294491*^9, 3.807451758610443*^9}, {
   3.807451811260674*^9, 3.807451872661121*^9}, {3.807451903291706*^9, 
   3.807451913658021*^9}, 3.807452053841406*^9, {3.807452084563612*^9, 
   3.8074521092464113`*^9}, {3.8074521430254297`*^9, 3.807452173464899*^9}, 
   3.807453093195869*^9, {3.807453841627644*^9, 3.8074538806176777`*^9}, 
   3.8074546661961718`*^9, 3.807454973880992*^9, 3.807455024966724*^9, {
   3.807462528718346*^9, 3.8074625353503237`*^9}, 3.80746256986863*^9, {
   3.8074626029222527`*^9, 3.8074626369907427`*^9}, {3.807462676903906*^9, 
   3.8074627009033003`*^9}, {3.807462741769024*^9, 3.8074629162691727`*^9}, {
   3.807462974389474*^9, 3.807463093598983*^9}, 3.807463123750678*^9, {
   3.807463198769704*^9, 3.80746320673995*^9}, {3.807463238768888*^9, 
   3.8074632961972322`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2139.3859737450957`"}], ",", 
   RowBox[{"-", "661.8649781698016`"}], ",", "661.8649781698016`", ",", 
   "2139.3859737450957`"}], "}"}]], "Output",
 CellChangeTimes->{{3.807450107816661*^9, 3.807450151688466*^9}, 
   3.807450234323058*^9, 3.807450280956608*^9, {3.807450316389776*^9, 
   3.807450367740184*^9}, {3.807450398172957*^9, 3.807450408389529*^9}, {
   3.807450670220667*^9, 3.8074507370912313`*^9}, {3.807450888039207*^9, 
   3.807450933138418*^9}, {3.807450993223157*^9, 3.8074510228564377`*^9}, {
   3.807451106788621*^9, 3.807451120973078*^9}, {3.8074516676141376`*^9, 
   3.807451691957286*^9}, {3.807451726294491*^9, 3.807451758610443*^9}, {
   3.807451811260674*^9, 3.807451872661121*^9}, {3.807451903291706*^9, 
   3.807451913658021*^9}, 3.807452053841406*^9, {3.807452084563612*^9, 
   3.8074521092464113`*^9}, {3.8074521430254297`*^9, 3.807452173464899*^9}, 
   3.807453093195869*^9, {3.807453841627644*^9, 3.8074538806176777`*^9}, 
   3.8074546661961718`*^9, 3.807454973880992*^9, 3.807455024966724*^9, {
   3.807462528718346*^9, 3.8074625353503237`*^9}, 3.80746256986863*^9, {
   3.8074626029222527`*^9, 3.8074626369907427`*^9}, {3.807462676903906*^9, 
   3.8074627009033003`*^9}, {3.807462741769024*^9, 3.8074629162691727`*^9}, {
   3.807462974389474*^9, 3.807463093598983*^9}, 3.807463123750678*^9, {
   3.807463198769704*^9, 3.80746320673995*^9}, {3.807463238768888*^9, 
   3.8074632962040577`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQXXAqbtLRuoUHGMDgg33KdV6eO2oIfsSTPa2fzi2A
89n2iSWHCiD4QqZCLzfvmQfn8xwXmbEjfi6cP+kGn7Tm09lw/sH3lmx3m2fB
+TVtMUf/sMyE87W/zRGQ6J0O5zdn8x0p05sG56cllHs7bpoC53+KErT2958M
5xfpndwW8XkinF/XWMF2rnICnJ+6ZWMNr3EfnP8sJXFKmHk3nB9w3OfINM8O
OJ/bdNaR2L5WOP/uwms5f6Y3wfmMJq9OOa+oh/PLlVh57FZVwvn7S6bXqp0o
hvODd9+Wt5yWA+e3dro8aV6fAOd/Fr62Yrm3G5y/6P6q3X7urg4wfsEPvxVG
yolw/iZu7YQyrRw433ui6h5d/hI4/43FPnGjt5Vw/quTky5ppNXD+bHrjsjt
WNUE5xe/uct8Nb8Vzl9YsfvCL7UOOH8766qvHpLdcH5Nu5mXwM1eOF+UNev3
/8wJcP7hA+2ZJucmwvm1i9u9c7Unw/mr2SZEWi2bAucbpKT/P8w+Dc7XcnK/
+LBtOpyv784pzvJ/Bpzf4zbry6PYWQj/HDP+F3prNpzf6jBnfqvtXDh/58Nn
W3bOnAfnb2SU/X2AcwGcv4F/XTrzLgRfIJetNkVmISL8IfkFzgcA5AULqA==

      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
k6T+W6Jfhg+8dtW8iJ4lvA7yJ/LSEb6HzVH0BuhDq2Dz++E1kCNN59VFGKL/
uL+tTxDzzLTh9CV6XxO055/wwh9iPloM0emlvzNBye+pj/nNE/Pvx4DafqlL
6CBJvOvXV2I95B3lpFYuoQSh5B9Mi8R+4YzdVi5m6CrDRSqPNUIPg4vvmiwt
UL3uFa7j22vg8Vu3WkrQFtU9vprDdpAMz5wlHuvp2aLnRpC7dYgMTOMsL12D
bVFkksXC8mEyVDb3zVS9s0XFDIKXPh4h8lDQhUP7YuyQXy43ZVycDGjrfA7t
nD268umxgD2RzzhozsYMVzkiZfPEfnXifLvPfNzGT9QV4R7xLiHivGRNSvxx
3twVpdC8Drlzjwwuu77f2J3gimb93NtPEuctP8u9xoffXNGf+MgUxSYypLBK
0lKq3VBUQ/53jXYyXOOQrnIXdkdL46OnRd6RISPxgJ8Mpyf6d+TNW5c/ZMC9
Omi/qCfyvGoX/WiDDMvMYUx0Kp5IUId3cZvIV5pJkyXvPD2RxbGJ8Bs0FKBK
Lu32euuJPpf+kbrOTIHrKYf3NKZ5IdP5EDN/Ij8V9V+cyav2QlXn0yNjDlLg
NWvUvQjshTrq5xeS+ClwJPWLsv6qF6qTOCWUKkT4jdSKqyt63ujgkdgqEyJP
aaUfaRVn80Ek/gO3Joj8tEDJfHPrqA+i+S3BnkTkpxsmNFMHlHyQTVZwjIwS
BV7um6JmdfNBFv5XpbyVKYCq8tSXX/sgqcEczVvqRB7ayWDm+IW4ziVVeZjw
S6HXfK9O/vFBXO7RFrlEvmo5YZDcf8wXKUiGpF8n/JbMU+Z3dXG+6AaXR9sr
Ij8NHQiaPVrii+Sodz5hJfyaZ8R/P0uafJFNvo6TtjEF6s538aXO+qLpi3uy
Ggm/p10tLcqw6Ysujzj/N0b4wUWmcoVwLj+kdP9P6W8zChwbDLNyV/FD+Jnq
V34iT72UWnL/auaHuprtdUUIP3kl+3Kktacf2pua0i1C5Klyc/lKPZIf2v/m
cSkn4Uf3z619k/znh5osqVoiCT/bom6zcXu3Pwo1y4rWIPyuWW3/Ln5xf9Qq
+BnTE344x/2OJLuFP2J6jDRdCL8sM7RH+Ya3P7J/N+3GQvjpdzI3DKgS/ZGj
mnFzNcHsfx18V5v9keTCekAn4b/rLN7FOb/1R1GfYrtVCb+u066cN/2fP6JK
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
uHd/F9lU+n/vS6H//77U/wF0cFBD
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{-2139.3859737450957`, -661.8649781698016, 661.8649781698016, 
   2139.3859737450957`}, {-2139.3859737450957`, -661.8649781698016, 
   661.8649781698016, 2139.3859737450957`}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2239.3859737450957`, 2239.3859737450957`}, {0., 
   1.2139729724947845`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.807450107816661*^9, 3.807450151688466*^9}, 
   3.807450234323058*^9, 3.807450280956608*^9, {3.807450316389776*^9, 
   3.807450367740184*^9}, {3.807450398172957*^9, 3.807450408389529*^9}, {
   3.807450670220667*^9, 3.8074507370912313`*^9}, {3.807450888039207*^9, 
   3.807450933138418*^9}, {3.807450993223157*^9, 3.8074510228564377`*^9}, {
   3.807451106788621*^9, 3.807451120973078*^9}, {3.8074516676141376`*^9, 
   3.807451691957286*^9}, {3.807451726294491*^9, 3.807451758610443*^9}, {
   3.807451811260674*^9, 3.807451872661121*^9}, {3.807451903291706*^9, 
   3.807451913658021*^9}, 3.807452053841406*^9, {3.807452084563612*^9, 
   3.8074521092464113`*^9}, {3.8074521430254297`*^9, 3.807452173464899*^9}, 
   3.807453093195869*^9, {3.807453841627644*^9, 3.8074538806176777`*^9}, 
   3.8074546661961718`*^9, 3.807454973880992*^9, 3.807455024966724*^9, {
   3.807462528718346*^9, 3.8074625353503237`*^9}, 3.80746256986863*^9, {
   3.8074626029222527`*^9, 3.8074626369907427`*^9}, {3.807462676903906*^9, 
   3.8074627009033003`*^9}, {3.807462741769024*^9, 3.8074629162691727`*^9}, {
   3.807462974389474*^9, 3.807463093598983*^9}, 3.807463123750678*^9, {
   3.807463198769704*^9, 3.80746320673995*^9}, {3.807463238768888*^9, 
   3.8074632965439157`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
JFVDbN2dQhim4il+ZmxT5f/eF8H/f1/0P3Bf87s=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJw1mXk010/Ux2Una3aRPfu+JPS5k337UkIIoUJIkj3Zsu872UmFiiKliKmQ
ipTwS2UpSxLRt4hsj+ec5/lrzuvcc2bufc/MvXPPiLidtzpDSUFBsbSLguJ/
R79XztldEZV4uaCmuddlmvigK2dIG16Je228Ljh6TxPQurZmGFqJyQsDA+TA
aYLldq5rz8VKbCfdV6SaMk3cSXul9NqzEtM+7e+jeTBNzB3R6H9rVYnXe7V0
fzHNEKf/Y2b6vL8ShxC9ZxnwDGE31RZHflOBffaKjAbpzBIdZirsq68rsGzD
jcVpk1lif9PNks2eCizqrXzJ+fgs8Ts6u4n+eQUefpgq6OM/S6QLeX7Z97AC
yxzN8/9XM0t0OnAcMiuvwE80DLPneL4Tiu/O/rl2vgK7aT3YOrb5naBt5z5l
w1aBzW/fpdWb/UGEJDgGpjFX4LsXGwX0//7Y8bcqoYuxAp8xZbhgSTtPvJmU
v61OU4HfFzutxIrPE/IcyXOyf8rx2KEVFx/XecKiboblzotyzPEdtNVG54mM
D+XHG3zLcfoMy/T05wVij/qe701tZfgo/fzS561FwgHerMPDMvzihlSHPP0S
UWWSzNJ7rwwHcGdw/WZbIlScKdWmbpThIa8qmkzRJeJoAjmCM6sMR6kIR3MY
LhGZIwOcgWfKcPr1RA+D9CWCNSIHabCUYQnxd7vDxH4RTC84C1tOluJshoB1
FzcyYdUg7PDGvhTv8z33+t45MlFYICcwdawUs6UZeu0OJRPinvoVrMaleIbS
T30kg0wcYgiocVcqxS6zQd/Hn5AJX7P3LZy7SnF3Trh45d7fRH9/1ohfVQkm
mrNuK479JrI/sOyVni7G24YDjleil4nF2Na5a+PFWLHbP9otfZkwV/Z8vO9j
MbblMXEyK14maJKf2nP2F2PxrSInreZlIkQ7oHC7pRh7WswFp39fJpzLRriG
U4txfhbfHLf1CiFzuprtilox1rK76PNd6S/xdPEg7eiVIqzTUrX1ePcaIRCm
EfflchH+WyfSWimwRgRRq1LPBBfhgQqK/nz5NUKOT45y0bsIV2t3a9y2XCMK
dfdtUVgX4ZRLvuVxuWuEXx7lirh4EVarmhvcFv5H7NN+Pe3TeRVH/3jgftlg
nQiPd+zaoL6KZUbaOQ/gTUI7MUlFcLsQ/2qtGn8zuEn8S3pQfmitEL9uJ8WF
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
cXT3kxovVaI5H8veMp9p4v/+u9H//3f/D+/Ko/4=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{-2139.3859737450957`, -661.8649781698016, 661.8649781698016, 
   2139.3859737450957`}, {-2139.3859737450957`, -661.8649781698016, 
   661.8649781698016, 2139.3859737450957`}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2239.3859737450957`, 2239.3859737450957`}, {0., 
   0.0009967321780594452}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.807450107816661*^9, 3.807450151688466*^9}, 
   3.807450234323058*^9, 3.807450280956608*^9, {3.807450316389776*^9, 
   3.807450367740184*^9}, {3.807450398172957*^9, 3.807450408389529*^9}, {
   3.807450670220667*^9, 3.8074507370912313`*^9}, {3.807450888039207*^9, 
   3.807450933138418*^9}, {3.807450993223157*^9, 3.8074510228564377`*^9}, {
   3.807451106788621*^9, 3.807451120973078*^9}, {3.8074516676141376`*^9, 
   3.807451691957286*^9}, {3.807451726294491*^9, 3.807451758610443*^9}, {
   3.807451811260674*^9, 3.807451872661121*^9}, {3.807451903291706*^9, 
   3.807451913658021*^9}, 3.807452053841406*^9, {3.807452084563612*^9, 
   3.8074521092464113`*^9}, {3.8074521430254297`*^9, 3.807452173464899*^9}, 
   3.807453093195869*^9, {3.807453841627644*^9, 3.8074538806176777`*^9}, 
   3.8074546661961718`*^9, 3.807454973880992*^9, 3.807455024966724*^9, {
   3.807462528718346*^9, 3.8074625353503237`*^9}, 3.80746256986863*^9, {
   3.8074626029222527`*^9, 3.8074626369907427`*^9}, {3.807462676903906*^9, 
   3.8074627009033003`*^9}, {3.807462741769024*^9, 3.8074629162691727`*^9}, {
   3.807462974389474*^9, 3.807463093598983*^9}, 3.807463123750678*^9, {
   3.807463198769704*^9, 3.80746320673995*^9}, {3.807463238768888*^9, 
   3.80746329683514*^9}}]
}, Open  ]],

Cell["\<\
Unlike the gaussian case. In this case the scale perturbed distribution has a \
lower peak than the unperturbed one and, in addition, the shoulders and tail \
get fatter !!!!\
\>", "Text",
 CellChangeTimes->{{3.80746314954102*^9, 3.8074631691724987`*^9}, {
  3.8074691477763777`*^9, 3.807469205576733*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1435, 946},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 112, 1, 92, "Title"],
Cell[CellGroupData[{
Cell[717, 27, 125, 1, 65, "Chapter"],
Cell[845, 30, 5425, 193, 494, "Text"],
Cell[CellGroupData[{
Cell[6295, 227, 97, 1, 64, "Section"],
Cell[6395, 230, 1845, 59, 90, "Input"],
Cell[CellGroupData[{
Cell[8265, 293, 785, 20, 32, "Input"],
Cell[9053, 315, 2228, 72, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11318, 392, 1075, 31, 54, "Input"],
Cell[12396, 425, 98, 1, 32, "Output"],
Cell[12497, 428, 98, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12632, 434, 318, 8, 32, "Input"],
Cell[12953, 444, 497, 14, 32, "Output"]
}, Open  ]],
Cell[13465, 461, 251, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[13741, 470, 2428, 70, 96, "Input"],
Cell[16172, 542, 14258, 247, 243, "Output"],
Cell[30433, 791, 13161, 230, 384, "Output"]
}, Open  ]],
Cell[43609, 1024, 227, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[43861, 1033, 1293, 37, 54, "Input"],
Cell[45157, 1072, 3758, 76, 245, "Output"]
}, Open  ]],
Cell[48930, 1151, 351, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[49306, 1161, 2566, 74, 117, "Input"],
Cell[51875, 1237, 14976, 258, 243, "Output"],
Cell[66854, 1497, 13341, 231, 243, "Output"]
}, Open  ]],
Cell[80210, 1731, 232, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[80467, 1740, 2258, 67, 96, "Input"],
Cell[82728, 1809, 10677, 190, 247, "Output"],
Cell[93408, 2001, 13868, 243, 243, "Output"]
}, Open  ]],
Cell[107291, 2247, 506, 17, 53, "Input"],
Cell[107800, 2266, 92, 1, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107929, 2272, 149, 2, 64, "Section"],
Cell[108081, 2276, 1084, 33, 91, "Input"],
Cell[109168, 2311, 167, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[109360, 2317, 623, 16, 32, "Input"],
Cell[109986, 2335, 163, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110186, 2342, 620, 16, 32, "Input"],
Cell[110809, 2360, 161, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111007, 2367, 527, 15, 32, "Input"],
Cell[111537, 2384, 194, 6, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111768, 2395, 1686, 45, 54, "Input"],
Cell[113457, 2442, 736, 22, 56, "Output"],
Cell[114196, 2466, 518, 13, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114751, 2484, 5731, 175, 170, "Input"],
Cell[120485, 2661, 5653, 175, 112, "Output"]
}, Open  ]],
Cell[126153, 2839, 779, 20, 54, "Input"],
Cell[CellGroupData[{
Cell[126957, 2863, 661, 18, 54, "Input"],
Cell[CellGroupData[{
Cell[127643, 2885, 284, 6, 24, "Print"],
Cell[127930, 2893, 266, 5, 24, "Print"],
Cell[128199, 2900, 266, 5, 24, "Print"],
Cell[128468, 2907, 284, 6, 24, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[128801, 2919, 609, 17, 54, "Input"],
Cell[CellGroupData[{
Cell[129435, 2940, 201, 4, 24, "Print"],
Cell[129639, 2946, 185, 3, 24, "Print"],
Cell[129827, 2951, 183, 3, 24, "Print"],
Cell[130013, 2956, 201, 4, 24, "Print"]
}, Open  ]]
}, Open  ]],
Cell[130241, 2964, 94, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[130360, 2969, 1122, 24, 54, "Input"],
Cell[131485, 2995, 2170, 71, 126, "Output"]
}, Open  ]],
Cell[133670, 3069, 1605, 46, 91, "Input"],
Cell[CellGroupData[{
Cell[135300, 3119, 180, 3, 32, "Input"],
Cell[135483, 3124, 6459, 205, 153, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141979, 3334, 3072, 78, 167, "Input"],
Cell[145054, 3414, 1151, 22, 53, "Output"],
Cell[146208, 3438, 1083, 17, 32, "Output"],
Cell[147294, 3457, 10781, 189, 247, "Output"],
Cell[158078, 3648, 12298, 214, 242, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170413, 3867, 2243, 66, 146, "Input"],
Cell[172659, 3935, 357, 11, 53, "Output"],
Cell[173019, 3948, 299, 7, 32, "Output"],
Cell[173321, 3957, 8788, 158, 248, "Output"],
Cell[182112, 4117, 11031, 196, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193180, 4318, 361, 11, 54, "Input"],
Cell[193544, 4331, 291, 10, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193872, 4346, 569, 15, 32, "Input"],
Cell[194444, 4363, 4527, 140, 149, "Output"]
}, Open  ]],
Cell[198986, 4506, 382, 12, 59, "Input"],
Cell[CellGroupData[{
Cell[199393, 4522, 164, 4, 35, "Input"],
Cell[199560, 4528, 142, 4, 34, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[199751, 4538, 149, 2, 64, "Section"],
Cell[199903, 4542, 1062, 29, 91, "Input"],
Cell[200968, 4573, 167, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[201160, 4579, 623, 16, 32, "Input"],
Cell[201786, 4597, 163, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201986, 4604, 620, 16, 32, "Input"],
Cell[202609, 4622, 161, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202807, 4629, 5552, 171, 170, "Input"],
Cell[208362, 4802, 2219, 72, 78, "Output"]
}, Open  ]],
Cell[210596, 4877, 779, 20, 54, "Input"],
Cell[CellGroupData[{
Cell[211400, 4901, 661, 18, 54, "Input"],
Cell[CellGroupData[{
Cell[212086, 4923, 306, 6, 24, "Print"],
Cell[212395, 4931, 288, 5, 24, "Print"],
Cell[212686, 4938, 288, 5, 24, "Print"],
Cell[212977, 4945, 308, 6, 24, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[213334, 4957, 609, 17, 54, "Input"],
Cell[CellGroupData[{
Cell[213968, 4978, 223, 4, 24, "Print"],
Cell[214194, 4984, 207, 3, 24, "Print"],
Cell[214404, 4989, 207, 3, 24, "Print"],
Cell[214614, 4994, 223, 4, 24, "Print"]
}, Open  ]]
}, Open  ]],
Cell[214864, 5002, 120, 2, 32, "Input"],
Cell[214987, 5006, 1639, 44, 91, "Input"],
Cell[CellGroupData[{
Cell[216651, 5054, 129, 2, 32, "Input"],
Cell[216783, 5058, 2052, 69, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218872, 5132, 2497, 66, 159, "Input"],
Cell[221372, 5200, 1467, 23, 32, "Output"],
Cell[222842, 5225, 1481, 23, 32, "Output"],
Cell[224326, 5250, 21424, 363, 243, "Output"],
Cell[245753, 5615, 31174, 522, 243, "Output"]
}, Open  ]],
Cell[276942, 6140, 316, 6, 30, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

